/* soapServer.cpp
   Generated by gSOAP 2.7.13 from VirtualEarth.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.7.13 2009-04-23 18:16:49 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || soap_serve_request(soap)
		 || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetVersionInfo"))
		return soap_serve___ns1__GetVersionInfo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetCountryRegionInfo"))
		return soap_serve___ns1__GetCountryRegionInfo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetEntityTypes"))
		return soap_serve___ns1__GetEntityTypes(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetDataSourceInfo"))
		return soap_serve___ns1__GetDataSourceInfo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetGreatCircleDistances"))
		return soap_serve___ns1__GetGreatCircleDistances(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:GetClientToken"))
		return soap_serve___ns1__GetClientToken(soap);
	if (!soap_match_tag(soap, soap->tag, "ns9:Geocode"))
		return soap_serve___ns10__Geocode(soap);
	if (!soap_match_tag(soap, soap->tag, "ns9:ReverseGeocode"))
		return soap_serve___ns10__ReverseGeocode(soap);
	if (!soap_match_tag(soap, soap->tag, "ns12:GetImageryMetadata"))
		return soap_serve___ns13__GetImageryMetadata(soap);
	if (!soap_match_tag(soap, soap->tag, "ns12:GetMapUri"))
		return soap_serve___ns13__GetMapUri(soap);
	if (!soap_match_tag(soap, soap->tag, "ns15:CalculateRoute"))
		return soap_serve___ns16__CalculateRoute(soap);
	if (!soap_match_tag(soap, soap->tag, "ns15:CalculateRoutesFromMajorRoads"))
		return soap_serve___ns16__CalculateRoutesFromMajorRoads(soap);
	if (!soap_match_tag(soap, soap->tag, "ns3:Search"))
		return soap_serve___ns6__Search(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetVersionInfo(struct soap *soap)
{	struct __ns1__GetVersionInfo soap_tmp___ns1__GetVersionInfo;
	_ns1__GetVersionInfoResponse ns1__GetVersionInfoResponse;
	ns1__GetVersionInfoResponse.soap_default(soap);
	soap_default___ns1__GetVersionInfo(soap, &soap_tmp___ns1__GetVersionInfo);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetVersionInfo(soap, &soap_tmp___ns1__GetVersionInfo, "-ns1:GetVersionInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetVersionInfo(soap, soap_tmp___ns1__GetVersionInfo.ns1__GetVersionInfo, &ns1__GetVersionInfoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__GetVersionInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetVersionInfoResponse.soap_put(soap, "ns1:GetVersionInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetVersionInfoResponse.soap_put(soap, "ns1:GetVersionInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetCountryRegionInfo(struct soap *soap)
{	struct __ns1__GetCountryRegionInfo soap_tmp___ns1__GetCountryRegionInfo;
	_ns1__GetCountryRegionInfoResponse ns1__GetCountryRegionInfoResponse;
	ns1__GetCountryRegionInfoResponse.soap_default(soap);
	soap_default___ns1__GetCountryRegionInfo(soap, &soap_tmp___ns1__GetCountryRegionInfo);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetCountryRegionInfo(soap, &soap_tmp___ns1__GetCountryRegionInfo, "-ns1:GetCountryRegionInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetCountryRegionInfo(soap, soap_tmp___ns1__GetCountryRegionInfo.ns1__GetCountryRegionInfo, &ns1__GetCountryRegionInfoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__GetCountryRegionInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetCountryRegionInfoResponse.soap_put(soap, "ns1:GetCountryRegionInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetCountryRegionInfoResponse.soap_put(soap, "ns1:GetCountryRegionInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetEntityTypes(struct soap *soap)
{	struct __ns1__GetEntityTypes soap_tmp___ns1__GetEntityTypes;
	_ns1__GetEntityTypesResponse ns1__GetEntityTypesResponse;
	ns1__GetEntityTypesResponse.soap_default(soap);
	soap_default___ns1__GetEntityTypes(soap, &soap_tmp___ns1__GetEntityTypes);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetEntityTypes(soap, &soap_tmp___ns1__GetEntityTypes, "-ns1:GetEntityTypes", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetEntityTypes(soap, soap_tmp___ns1__GetEntityTypes.ns1__GetEntityTypes, &ns1__GetEntityTypesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__GetEntityTypesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetEntityTypesResponse.soap_put(soap, "ns1:GetEntityTypesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetEntityTypesResponse.soap_put(soap, "ns1:GetEntityTypesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetDataSourceInfo(struct soap *soap)
{	struct __ns1__GetDataSourceInfo soap_tmp___ns1__GetDataSourceInfo;
	_ns1__GetDataSourceInfoResponse ns1__GetDataSourceInfoResponse;
	ns1__GetDataSourceInfoResponse.soap_default(soap);
	soap_default___ns1__GetDataSourceInfo(soap, &soap_tmp___ns1__GetDataSourceInfo);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetDataSourceInfo(soap, &soap_tmp___ns1__GetDataSourceInfo, "-ns1:GetDataSourceInfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetDataSourceInfo(soap, soap_tmp___ns1__GetDataSourceInfo.ns1__GetDataSourceInfo, &ns1__GetDataSourceInfoResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__GetDataSourceInfoResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetDataSourceInfoResponse.soap_put(soap, "ns1:GetDataSourceInfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetDataSourceInfoResponse.soap_put(soap, "ns1:GetDataSourceInfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetGreatCircleDistances(struct soap *soap)
{	struct __ns1__GetGreatCircleDistances soap_tmp___ns1__GetGreatCircleDistances;
	_ns1__GetGreatCircleDistancesResponse ns1__GetGreatCircleDistancesResponse;
	ns1__GetGreatCircleDistancesResponse.soap_default(soap);
	soap_default___ns1__GetGreatCircleDistances(soap, &soap_tmp___ns1__GetGreatCircleDistances);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetGreatCircleDistances(soap, &soap_tmp___ns1__GetGreatCircleDistances, "-ns1:GetGreatCircleDistances", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetGreatCircleDistances(soap, soap_tmp___ns1__GetGreatCircleDistances.ns1__GetGreatCircleDistances, &ns1__GetGreatCircleDistancesResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__GetGreatCircleDistancesResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetGreatCircleDistancesResponse.soap_put(soap, "ns1:GetGreatCircleDistancesResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetGreatCircleDistancesResponse.soap_put(soap, "ns1:GetGreatCircleDistancesResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetClientToken(struct soap *soap)
{	struct __ns1__GetClientToken soap_tmp___ns1__GetClientToken;
	_ns1__GetClientTokenResponse ns1__GetClientTokenResponse;
	ns1__GetClientTokenResponse.soap_default(soap);
	soap_default___ns1__GetClientToken(soap, &soap_tmp___ns1__GetClientToken);
	soap->encodingStyle = NULL;
	if (!soap_get___ns1__GetClientToken(soap, &soap_tmp___ns1__GetClientToken, "-ns1:GetClientToken", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns1__GetClientToken(soap, soap_tmp___ns1__GetClientToken.ns1__GetClientToken, &ns1__GetClientTokenResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns1__GetClientTokenResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns1__GetClientTokenResponse.soap_put(soap, "ns1:GetClientTokenResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns1__GetClientTokenResponse.soap_put(soap, "ns1:GetClientTokenResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns10__Geocode(struct soap *soap)
{	struct __ns10__Geocode soap_tmp___ns10__Geocode;
	_ns9__GeocodeResponse ns9__GeocodeResponse;
	ns9__GeocodeResponse.soap_default(soap);
	soap_default___ns10__Geocode(soap, &soap_tmp___ns10__Geocode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns10__Geocode(soap, &soap_tmp___ns10__Geocode, "-ns10:Geocode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns10__Geocode(soap, soap_tmp___ns10__Geocode.ns9__Geocode, &ns9__GeocodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns9__GeocodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns9__GeocodeResponse.soap_put(soap, "ns9:GeocodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns9__GeocodeResponse.soap_put(soap, "ns9:GeocodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns10__ReverseGeocode(struct soap *soap)
{	struct __ns10__ReverseGeocode soap_tmp___ns10__ReverseGeocode;
	_ns9__ReverseGeocodeResponse ns9__ReverseGeocodeResponse;
	ns9__ReverseGeocodeResponse.soap_default(soap);
	soap_default___ns10__ReverseGeocode(soap, &soap_tmp___ns10__ReverseGeocode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns10__ReverseGeocode(soap, &soap_tmp___ns10__ReverseGeocode, "-ns10:ReverseGeocode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns10__ReverseGeocode(soap, soap_tmp___ns10__ReverseGeocode.ns9__ReverseGeocode, &ns9__ReverseGeocodeResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns9__ReverseGeocodeResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns9__ReverseGeocodeResponse.soap_put(soap, "ns9:ReverseGeocodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns9__ReverseGeocodeResponse.soap_put(soap, "ns9:ReverseGeocodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns13__GetImageryMetadata(struct soap *soap)
{	struct __ns13__GetImageryMetadata soap_tmp___ns13__GetImageryMetadata;
	_ns12__GetImageryMetadataResponse ns12__GetImageryMetadataResponse;
	ns12__GetImageryMetadataResponse.soap_default(soap);
	soap_default___ns13__GetImageryMetadata(soap, &soap_tmp___ns13__GetImageryMetadata);
	soap->encodingStyle = NULL;
	if (!soap_get___ns13__GetImageryMetadata(soap, &soap_tmp___ns13__GetImageryMetadata, "-ns13:GetImageryMetadata", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns13__GetImageryMetadata(soap, soap_tmp___ns13__GetImageryMetadata.ns12__GetImageryMetadata, &ns12__GetImageryMetadataResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns12__GetImageryMetadataResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns12__GetImageryMetadataResponse.soap_put(soap, "ns12:GetImageryMetadataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns12__GetImageryMetadataResponse.soap_put(soap, "ns12:GetImageryMetadataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns13__GetMapUri(struct soap *soap)
{	struct __ns13__GetMapUri soap_tmp___ns13__GetMapUri;
	_ns12__GetMapUriResponse ns12__GetMapUriResponse;
	ns12__GetMapUriResponse.soap_default(soap);
	soap_default___ns13__GetMapUri(soap, &soap_tmp___ns13__GetMapUri);
	soap->encodingStyle = NULL;
	if (!soap_get___ns13__GetMapUri(soap, &soap_tmp___ns13__GetMapUri, "-ns13:GetMapUri", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns13__GetMapUri(soap, soap_tmp___ns13__GetMapUri.ns12__GetMapUri, &ns12__GetMapUriResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns12__GetMapUriResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns12__GetMapUriResponse.soap_put(soap, "ns12:GetMapUriResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns12__GetMapUriResponse.soap_put(soap, "ns12:GetMapUriResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns16__CalculateRoute(struct soap *soap)
{	struct __ns16__CalculateRoute soap_tmp___ns16__CalculateRoute;
	_ns15__CalculateRouteResponse ns15__CalculateRouteResponse;
	ns15__CalculateRouteResponse.soap_default(soap);
	soap_default___ns16__CalculateRoute(soap, &soap_tmp___ns16__CalculateRoute);
	soap->encodingStyle = NULL;
	if (!soap_get___ns16__CalculateRoute(soap, &soap_tmp___ns16__CalculateRoute, "-ns16:CalculateRoute", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns16__CalculateRoute(soap, soap_tmp___ns16__CalculateRoute.ns15__CalculateRoute, &ns15__CalculateRouteResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns15__CalculateRouteResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns15__CalculateRouteResponse.soap_put(soap, "ns15:CalculateRouteResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns15__CalculateRouteResponse.soap_put(soap, "ns15:CalculateRouteResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns16__CalculateRoutesFromMajorRoads(struct soap *soap)
{	struct __ns16__CalculateRoutesFromMajorRoads soap_tmp___ns16__CalculateRoutesFromMajorRoads;
	_ns15__CalculateRoutesFromMajorRoadsResponse ns15__CalculateRoutesFromMajorRoadsResponse;
	ns15__CalculateRoutesFromMajorRoadsResponse.soap_default(soap);
	soap_default___ns16__CalculateRoutesFromMajorRoads(soap, &soap_tmp___ns16__CalculateRoutesFromMajorRoads);
	soap->encodingStyle = NULL;
	if (!soap_get___ns16__CalculateRoutesFromMajorRoads(soap, &soap_tmp___ns16__CalculateRoutesFromMajorRoads, "-ns16:CalculateRoutesFromMajorRoads", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns16__CalculateRoutesFromMajorRoads(soap, soap_tmp___ns16__CalculateRoutesFromMajorRoads.ns15__CalculateRoutesFromMajorRoads, &ns15__CalculateRoutesFromMajorRoadsResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns15__CalculateRoutesFromMajorRoadsResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns15__CalculateRoutesFromMajorRoadsResponse.soap_put(soap, "ns15:CalculateRoutesFromMajorRoadsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns15__CalculateRoutesFromMajorRoadsResponse.soap_put(soap, "ns15:CalculateRoutesFromMajorRoadsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns6__Search(struct soap *soap)
{	struct __ns6__Search soap_tmp___ns6__Search;
	_ns3__SearchResponse ns3__SearchResponse;
	ns3__SearchResponse.soap_default(soap);
	soap_default___ns6__Search(soap, &soap_tmp___ns6__Search);
	soap->encodingStyle = NULL;
	if (!soap_get___ns6__Search(soap, &soap_tmp___ns6__Search, "-ns6:Search", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns6__Search(soap, soap_tmp___ns6__Search.ns3__Search, &ns3__SearchResponse);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns3__SearchResponse.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns3__SearchResponse.soap_put(soap, "ns3:SearchResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns3__SearchResponse.soap_put(soap, "ns3:SearchResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
