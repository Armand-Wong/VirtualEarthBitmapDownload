/* soapStub.h
   Generated by gSOAP 2.7.13 from VirtualEarth.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__DataSourceCapability
#define SOAP_TYPE_ns1__DataSourceCapability (192)
/* Bitmask ns1:DataSourceCapability */
enum ns1__DataSourceCapability {ns1__DataSourceCapability__CanDrawMaps = 1, ns1__DataSourceCapability__CanFindPlaces = 2, ns1__DataSourceCapability__CanFindNearby = 4, ns1__DataSourceCapability__CanRoute = 8, ns1__DataSourceCapability__CanFindAddress = 16, ns1__DataSourceCapability__HasIcons = 32, ns1__DataSourceCapability__DataServiceQuery = 64};
#endif

#ifndef SOAP_TYPE_ns1__DistanceUnit
#define SOAP_TYPE_ns1__DistanceUnit (194)
/* ns1:DistanceUnit */
enum ns1__DistanceUnit {ns1__DistanceUnit__Kilometer = 0, ns1__DistanceUnit__Mile = 1};
#endif

#ifndef SOAP_TYPE_ns4__Confidence
#define SOAP_TYPE_ns4__Confidence (196)
/* ns4:Confidence */
enum ns4__Confidence {ns4__Confidence__High = 0, ns4__Confidence__Medium = 1, ns4__Confidence__Low = 2};
#endif

#ifndef SOAP_TYPE_ns4__DeviceType
#define SOAP_TYPE_ns4__DeviceType (198)
/* ns4:DeviceType */
enum ns4__DeviceType {ns4__DeviceType__Desktop = 0, ns4__DeviceType__Mobile = 1};
#endif

#ifndef SOAP_TYPE_ns4__DistanceUnit
#define SOAP_TYPE_ns4__DistanceUnit (200)
/* ns4:DistanceUnit */
enum ns4__DistanceUnit {ns4__DistanceUnit__Kilometer = 0, ns4__DistanceUnit__Mile = 1};
#endif

#ifndef SOAP_TYPE_ns4__CompareOperator
#define SOAP_TYPE_ns4__CompareOperator (202)
/* ns4:CompareOperator */
enum ns4__CompareOperator {ns4__CompareOperator__Equals = 0, ns4__CompareOperator__GreaterThan = 1, ns4__CompareOperator__GreaterThanOrEquals = 2, ns4__CompareOperator__LessThan = 3, ns4__CompareOperator__LessThanOrEquals = 4};
#endif

#ifndef SOAP_TYPE_ns4__LogicalOperator
#define SOAP_TYPE_ns4__LogicalOperator (204)
/* ns4:LogicalOperator */
enum ns4__LogicalOperator {ns4__LogicalOperator__And = 0, ns4__LogicalOperator__Or = 1};
#endif

#ifndef SOAP_TYPE_ns4__AuthenticationResultCode
#define SOAP_TYPE_ns4__AuthenticationResultCode (206)
/* ns4:AuthenticationResultCode */
enum ns4__AuthenticationResultCode {ns4__AuthenticationResultCode__None = 0, ns4__AuthenticationResultCode__NoCredentials = 1, ns4__AuthenticationResultCode__ValidCredentials = 2, ns4__AuthenticationResultCode__InvalidCredentials = 3, ns4__AuthenticationResultCode__CredentialsExpired = 4, ns4__AuthenticationResultCode__NotAuthorized = 5};
#endif

#ifndef SOAP_TYPE_ns4__ResponseStatusCode
#define SOAP_TYPE_ns4__ResponseStatusCode (208)
/* ns4:ResponseStatusCode */
enum ns4__ResponseStatusCode {ns4__ResponseStatusCode__Success = 0, ns4__ResponseStatusCode__BadRequest = 1, ns4__ResponseStatusCode__ServerError = 2};
#endif

#ifndef SOAP_TYPE_ns4__UriScheme
#define SOAP_TYPE_ns4__UriScheme (210)
/* ns4:UriScheme */
enum ns4__UriScheme {ns4__UriScheme__Http = 0, ns4__UriScheme__Https = 1};
#endif

#ifndef SOAP_TYPE_ns4__MapStyle
#define SOAP_TYPE_ns4__MapStyle (212)
/* ns4:MapStyle */
enum ns4__MapStyle {ns4__MapStyle__Road = 0, ns4__MapStyle__Aerial = 1, ns4__MapStyle__AerialWithLabels = 2, ns4__MapStyle__Birdseye = 3, ns4__MapStyle__BirdseyeWithLabels = 4};
#endif

#ifndef SOAP_TYPE_ns4__ImageType
#define SOAP_TYPE_ns4__ImageType (214)
/* ns4:ImageType */
enum ns4__ImageType {ns4__ImageType__Default = 0, ns4__ImageType__Png = 1, ns4__ImageType__Jpeg = 2, ns4__ImageType__Gif = 3};
#endif

#ifndef SOAP_TYPE_ns6__ListingType
#define SOAP_TYPE_ns6__ListingType (222)
/* ns6:ListingType */
enum ns6__ListingType {ns6__ListingType__Business = 0, ns6__ListingType__CommunityContent = 1, ns6__ListingType__Person = 2, ns6__ListingType__Unknown = 3};
#endif

#ifndef SOAP_TYPE_ns6__SortOrder
#define SOAP_TYPE_ns6__SortOrder (224)
/* ns6:SortOrder */
enum ns6__SortOrder {ns6__SortOrder__Relevance = 0, ns6__SortOrder__Distance = 1, ns6__SortOrder__Rating = 2, ns6__SortOrder__Popularity = 3};
#endif

#ifndef SOAP_TYPE_ns16__TravelMode
#define SOAP_TYPE_ns16__TravelMode (226)
/* ns16:TravelMode */
enum ns16__TravelMode {ns16__TravelMode__Driving = 0, ns16__TravelMode__Walking = 1};
#endif

#ifndef SOAP_TYPE_ns16__RouteOptimization
#define SOAP_TYPE_ns16__RouteOptimization (228)
/* ns16:RouteOptimization */
enum ns16__RouteOptimization {ns16__RouteOptimization__MinimizeTime = 0, ns16__RouteOptimization__MinimizeDistance = 1};
#endif

#ifndef SOAP_TYPE_ns16__RoutePathType
#define SOAP_TYPE_ns16__RoutePathType (230)
/* ns16:RoutePathType */
enum ns16__RoutePathType {ns16__RoutePathType__None = 0, ns16__RoutePathType__Points = 1};
#endif

#ifndef SOAP_TYPE_ns16__TrafficUsage
#define SOAP_TYPE_ns16__TrafficUsage (232)
/* ns16:TrafficUsage */
enum ns16__TrafficUsage {ns16__TrafficUsage__None = 0, ns16__TrafficUsage__TrafficBasedTime = 1, ns16__TrafficUsage__TrafficBasedRouteAndTime = 2};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryItemHintType
#define SOAP_TYPE_ns16__ItineraryItemHintType (234)
/* ns16:ItineraryItemHintType */
enum ns16__ItineraryItemHintType {ns16__ItineraryItemHintType__PreviousIntersection = 0, ns16__ItineraryItemHintType__NextIntersection = 1, ns16__ItineraryItemHintType__Landmark = 2};
#endif

#ifndef SOAP_TYPE_ns16__ManeuverType
#define SOAP_TYPE_ns16__ManeuverType (236)
/* ns16:ManeuverType */
enum ns16__ManeuverType {ns16__ManeuverType__None = 0, ns16__ManeuverType__Unknown = 1, ns16__ManeuverType__DepartStart = 2, ns16__ManeuverType__DepartIntermediateStop = 3, ns16__ManeuverType__DepartIntermediateStopReturning = 4, ns16__ManeuverType__ArriveFinish = 5, ns16__ManeuverType__ArriveIntermediateStop = 6, ns16__ManeuverType__TurnLeft = 7, ns16__ManeuverType__TurnRight = 8, ns16__ManeuverType__TurnBack = 9, ns16__ManeuverType__UTurn = 10, ns16__ManeuverType__TurnToStayLeft = 11, ns16__ManeuverType__TurnToStayRight = 12, ns16__ManeuverType__BearLeft = 13, ns16__ManeuverType__BearRight = 14, ns16__ManeuverType__KeepToStayLeft = 15, ns16__ManeuverType__KeepToStayRight = 16, ns16__ManeuverType__KeepToStayStraight = 17, ns16__ManeuverType__KeepLeft = 18, ns16__ManeuverType__KeepRight = 19, ns16__ManeuverType__KeepStraight = 20, ns16__ManeuverType__Take = 21, ns16__ManeuverType__TakeRampLeft = 22, ns16__ManeuverType__TakeRampRight = 23, ns16__ManeuverType__TakeRampStraight = 24, ns16__ManeuverType__KeepOnrampLeft = 25, ns16__ManeuverType__KeepOnrampRight = 26, ns16__ManeuverType__KeepOnrampStraight = 27, ns16__ManeuverType__Merge = 28, ns16__ManeuverType__Continue = 29, ns16__ManeuverType__RoadNameChange = 30, ns16__ManeuverType__EnterRoundabout = 31, ns16__ManeuverType__ExitRoundabout = 32, ns16__ManeuverType__TurnRightThenTurnRight = 33, ns16__ManeuverType__TurnRightThenTurnLeft = 34, ns16__ManeuverType__TurnRightThenBearRight = 35, ns16__ManeuverType__TurnRightThenBearLeft = 36, ns16__ManeuverType__TurnLeftThenTurnLeft = 37, ns16__ManeuverType__TurnLeftThenTurnRight = 38, ns16__ManeuverType__TurnLeftThenBearLeft = 39, ns16__ManeuverType__TurnLeftThenBearRight = 40, ns16__ManeuverType__BearRightThenTurnRight = 41, ns16__ManeuverType__BearRightThenTurnLeft = 42, ns16__ManeuverType__BearRightThenBearRight = 43, ns16__ManeuverType__BearRightThenBearLeft = 44, ns16__ManeuverType__BearLeftThenTurnLeft = 45, ns16__ManeuverType__BearLeftThenTurnRight = 46, ns16__ManeuverType__BearLeftThenBearRight = 47, ns16__ManeuverType__BearLeftThenBearLeft = 48, ns16__ManeuverType__RampThenHighwayRight = 49, ns16__ManeuverType__RampThenHighwayLeft = 50, ns16__ManeuverType__RampToHighwayStraight = 51, ns16__ManeuverType__EnterThenExitRoundabout = 52, ns16__ManeuverType__BearThenMerge = 53, ns16__ManeuverType__TurnThenMerge = 54, ns16__ManeuverType__BearThenKeep = 55, ns16__ManeuverType__Transfer = 56, ns16__ManeuverType__Wait = 57, ns16__ManeuverType__TakeTransit = 58, ns16__ManeuverType__Walk = 59};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryWarningSeverity
#define SOAP_TYPE_ns16__ItineraryWarningSeverity (238)
/* ns16:ItineraryWarningSeverity */
enum ns16__ItineraryWarningSeverity {ns16__ItineraryWarningSeverity__None = 0, ns16__ItineraryWarningSeverity__LowImpact = 1, ns16__ItineraryWarningSeverity__Minor = 2, ns16__ItineraryWarningSeverity__Moderate = 3, ns16__ItineraryWarningSeverity__Serious = 4};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryWarningType
#define SOAP_TYPE_ns16__ItineraryWarningType (240)
/* ns16:ItineraryWarningType */
enum ns16__ItineraryWarningType {ns16__ItineraryWarningType__Accident = 0, ns16__ItineraryWarningType__AdminDivisionChange = 1, ns16__ItineraryWarningType__BlockedRoad = 2, ns16__ItineraryWarningType__CheckTimetable = 3, ns16__ItineraryWarningType__Congestion = 4, ns16__ItineraryWarningType__CountryChange = 5, ns16__ItineraryWarningType__DisabledVehicle = 6, ns16__ItineraryWarningType__GateAccess = 7, ns16__ItineraryWarningType__GetOffTransit = 8, ns16__ItineraryWarningType__GetOnTransit = 9, ns16__ItineraryWarningType__IllegalUTurn = 10, ns16__ItineraryWarningType__MassTransit = 11, ns16__ItineraryWarningType__Miscellaneous = 12, ns16__ItineraryWarningType__NoIncident = 13, ns16__ItineraryWarningType__None = 14, ns16__ItineraryWarningType__Other = 15, ns16__ItineraryWarningType__OtherNews = 16, ns16__ItineraryWarningType__OtherTrafficIncidents = 17, ns16__ItineraryWarningType__PlannedEvent = 18, ns16__ItineraryWarningType__PrivateRoad = 19, ns16__ItineraryWarningType__RestrictedTurn = 20, ns16__ItineraryWarningType__RoadClosures = 21, ns16__ItineraryWarningType__RoadHazard = 22, ns16__ItineraryWarningType__ScheduledConstruction = 23, ns16__ItineraryWarningType__SeasonalClosures = 24, ns16__ItineraryWarningType__Tollbooth = 25, ns16__ItineraryWarningType__TollRoad = 26, ns16__ItineraryWarningType__TrafficFlow = 27, ns16__ItineraryWarningType__UnpavedRoad = 28, ns16__ItineraryWarningType__UnscheduledConstruction = 29, ns16__ItineraryWarningType__Weather = 30};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (7)
/* Primitive xsd:anyType schema type: */
class SOAP_CMAC xsd__anyType
{
public:
	char *__item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_xsd__anyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyType() : __item(NULL), soap(NULL) { }
	virtual ~xsd__anyType() { }
};
#endif

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (9)
/* Primitive xsd:QName schema type: */
class SOAP_CMAC xsd__QName : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_xsd__QName */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__QName() : __item(NULL) { }
	virtual ~xsd__QName() { }
};
#endif

#ifndef SOAP_TYPE_xsd__anyURI_
#define SOAP_TYPE_xsd__anyURI_ (11)
/* Primitive xsd:anyURI schema type: */
class SOAP_CMAC xsd__anyURI_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_xsd__anyURI_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__anyURI_() : __item(NULL) { }
	virtual ~xsd__anyURI_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (12)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() : __ptr(NULL), __size(0), id(NULL), type(NULL), options(NULL), soap(NULL) { }
	virtual ~xsd__base64Binary() { }
};
#endif

#ifndef SOAP_TYPE_xsd__base64Binary_
#define SOAP_TYPE_xsd__base64Binary_ (16)
/* Primitive xsd:base64Binary schema type: */
class SOAP_CMAC xsd__base64Binary_ : public xsd__anyType
{
public:
	xsd__base64Binary __item;
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_xsd__base64Binary_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary_()  { }
	virtual ~xsd__base64Binary_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (17)
/* Primitive xsd:boolean schema type: */
class SOAP_CMAC xsd__boolean : public xsd__anyType
{
public:
	bool __item;
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_xsd__boolean */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__boolean() : __item((bool)0) { }
	virtual ~xsd__boolean() { }
};
#endif

#ifndef SOAP_TYPE_xsd__byte_
#define SOAP_TYPE_xsd__byte_ (20)
/* Primitive xsd:byte schema type: */
class SOAP_CMAC xsd__byte_ : public xsd__anyType
{
public:
	char __item;
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_xsd__byte_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__byte_() : __item(0) { }
	virtual ~xsd__byte_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__dateTime
#define SOAP_TYPE_xsd__dateTime (21)
/* Primitive xsd:dateTime schema type: */
class SOAP_CMAC xsd__dateTime : public xsd__anyType
{
public:
	time_t __item;
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_xsd__dateTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__dateTime() : __item(0) { }
	virtual ~xsd__dateTime() { }
};
#endif

#ifndef SOAP_TYPE_xsd__decimal_
#define SOAP_TYPE_xsd__decimal_ (24)
/* Primitive xsd:decimal schema type: */
class SOAP_CMAC xsd__decimal_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_xsd__decimal_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__decimal_() : __item(NULL) { }
	virtual ~xsd__decimal_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__double
#define SOAP_TYPE_xsd__double (25)
/* Primitive xsd:double schema type: */
class SOAP_CMAC xsd__double : public xsd__anyType
{
public:
	double __item;
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_xsd__double */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__double() : __item(0) { }
	virtual ~xsd__double() { }
};
#endif

#ifndef SOAP_TYPE_xsd__duration_
#define SOAP_TYPE_xsd__duration_ (28)
/* Primitive xsd:duration schema type: */
class SOAP_CMAC xsd__duration_ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_xsd__duration_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__duration_() : __item(NULL) { }
	virtual ~xsd__duration_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__float
#define SOAP_TYPE_xsd__float (29)
/* Primitive xsd:float schema type: */
class SOAP_CMAC xsd__float : public xsd__anyType
{
public:
	float __item;
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_xsd__float */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__float() : __item(0) { }
	virtual ~xsd__float() { }
};
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (31)
/* Primitive xsd:int schema type: */
class SOAP_CMAC xsd__int : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_xsd__int */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__int() : __item(0) { }
	virtual ~xsd__int() { }
};
#endif

#ifndef SOAP_TYPE_xsd__long
#define SOAP_TYPE_xsd__long (32)
/* Primitive xsd:long schema type: */
class SOAP_CMAC xsd__long : public xsd__anyType
{
public:
	LONG64 __item;
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_xsd__long */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__long() : __item(0) { }
	virtual ~xsd__long() { }
};
#endif

#ifndef SOAP_TYPE_xsd__short
#define SOAP_TYPE_xsd__short (34)
/* Primitive xsd:short schema type: */
class SOAP_CMAC xsd__short : public xsd__anyType
{
public:
	short __item;
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_xsd__short */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__short() : __item(0) { }
	virtual ~xsd__short() { }
};
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (36)
/* Primitive xsd:string schema type: */
class SOAP_CMAC xsd__string : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_xsd__string */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__string() : __item(NULL) { }
	virtual ~xsd__string() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte_
#define SOAP_TYPE_xsd__unsignedByte_ (38)
/* Primitive xsd:unsignedByte schema type: */
class SOAP_CMAC xsd__unsignedByte_ : public xsd__anyType
{
public:
	unsigned char __item;
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_xsd__unsignedByte_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedByte_() : __item(0) { }
	virtual ~xsd__unsignedByte_() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (39)
/* Primitive xsd:unsignedInt schema type: */
class SOAP_CMAC xsd__unsignedInt : public xsd__anyType
{
public:
	unsigned int __item;
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_xsd__unsignedInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedInt() : __item(0) { }
	virtual ~xsd__unsignedInt() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedLong
#define SOAP_TYPE_xsd__unsignedLong (40)
/* Primitive xsd:unsignedLong schema type: */
class SOAP_CMAC xsd__unsignedLong : public xsd__anyType
{
public:
	ULONG64 __item;
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_xsd__unsignedLong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedLong() : __item(0) { }
	virtual ~xsd__unsignedLong() { }
};
#endif

#ifndef SOAP_TYPE_xsd__unsignedShort
#define SOAP_TYPE_xsd__unsignedShort (42)
/* Primitive xsd:unsignedShort schema type: */
class SOAP_CMAC xsd__unsignedShort : public xsd__anyType
{
public:
	unsigned short __item;
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_xsd__unsignedShort */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__unsignedShort() : __item(0) { }
	virtual ~xsd__unsignedShort() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DataSourceCapability_
#define SOAP_TYPE_ns1__DataSourceCapability_ (193)
/* Primitive ns1:DataSourceCapability schema type: */
class SOAP_CMAC ns1__DataSourceCapability_ : public xsd__anyType
{
public:
	enum ns1__DataSourceCapability __item;
public:
	virtual int soap_type() const { return 193; } /* = unique id SOAP_TYPE_ns1__DataSourceCapability_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DataSourceCapability_() : __item((enum ns1__DataSourceCapability)0) { }
	virtual ~ns1__DataSourceCapability_() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DistanceUnit_
#define SOAP_TYPE_ns1__DistanceUnit_ (195)
/* Primitive ns1:DistanceUnit schema type: */
class SOAP_CMAC ns1__DistanceUnit_ : public xsd__anyType
{
public:
	enum ns1__DistanceUnit __item;
public:
	virtual int soap_type() const { return 195; } /* = unique id SOAP_TYPE_ns1__DistanceUnit_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DistanceUnit_() : __item((enum ns1__DistanceUnit)0) { }
	virtual ~ns1__DistanceUnit_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Confidence_
#define SOAP_TYPE_ns4__Confidence_ (197)
/* Primitive ns4:Confidence schema type: */
class SOAP_CMAC ns4__Confidence_ : public xsd__anyType
{
public:
	enum ns4__Confidence __item;
public:
	virtual int soap_type() const { return 197; } /* = unique id SOAP_TYPE_ns4__Confidence_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Confidence_() : __item((enum ns4__Confidence)0) { }
	virtual ~ns4__Confidence_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__DeviceType_
#define SOAP_TYPE_ns4__DeviceType_ (199)
/* Primitive ns4:DeviceType schema type: */
class SOAP_CMAC ns4__DeviceType_ : public xsd__anyType
{
public:
	enum ns4__DeviceType __item;
public:
	virtual int soap_type() const { return 199; } /* = unique id SOAP_TYPE_ns4__DeviceType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__DeviceType_() : __item((enum ns4__DeviceType)0) { }
	virtual ~ns4__DeviceType_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__DistanceUnit_
#define SOAP_TYPE_ns4__DistanceUnit_ (201)
/* Primitive ns4:DistanceUnit schema type: */
class SOAP_CMAC ns4__DistanceUnit_ : public xsd__anyType
{
public:
	enum ns4__DistanceUnit __item;
public:
	virtual int soap_type() const { return 201; } /* = unique id SOAP_TYPE_ns4__DistanceUnit_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__DistanceUnit_() : __item((enum ns4__DistanceUnit)0) { }
	virtual ~ns4__DistanceUnit_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__CompareOperator_
#define SOAP_TYPE_ns4__CompareOperator_ (203)
/* Primitive ns4:CompareOperator schema type: */
class SOAP_CMAC ns4__CompareOperator_ : public xsd__anyType
{
public:
	enum ns4__CompareOperator __item;
public:
	virtual int soap_type() const { return 203; } /* = unique id SOAP_TYPE_ns4__CompareOperator_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__CompareOperator_() : __item((enum ns4__CompareOperator)0) { }
	virtual ~ns4__CompareOperator_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__LogicalOperator_
#define SOAP_TYPE_ns4__LogicalOperator_ (205)
/* Primitive ns4:LogicalOperator schema type: */
class SOAP_CMAC ns4__LogicalOperator_ : public xsd__anyType
{
public:
	enum ns4__LogicalOperator __item;
public:
	virtual int soap_type() const { return 205; } /* = unique id SOAP_TYPE_ns4__LogicalOperator_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__LogicalOperator_() : __item((enum ns4__LogicalOperator)0) { }
	virtual ~ns4__LogicalOperator_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__AuthenticationResultCode_
#define SOAP_TYPE_ns4__AuthenticationResultCode_ (207)
/* Primitive ns4:AuthenticationResultCode schema type: */
class SOAP_CMAC ns4__AuthenticationResultCode_ : public xsd__anyType
{
public:
	enum ns4__AuthenticationResultCode __item;
public:
	virtual int soap_type() const { return 207; } /* = unique id SOAP_TYPE_ns4__AuthenticationResultCode_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__AuthenticationResultCode_() : __item((enum ns4__AuthenticationResultCode)0) { }
	virtual ~ns4__AuthenticationResultCode_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ResponseStatusCode_
#define SOAP_TYPE_ns4__ResponseStatusCode_ (209)
/* Primitive ns4:ResponseStatusCode schema type: */
class SOAP_CMAC ns4__ResponseStatusCode_ : public xsd__anyType
{
public:
	enum ns4__ResponseStatusCode __item;
public:
	virtual int soap_type() const { return 209; } /* = unique id SOAP_TYPE_ns4__ResponseStatusCode_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ResponseStatusCode_() : __item((enum ns4__ResponseStatusCode)0) { }
	virtual ~ns4__ResponseStatusCode_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__UriScheme_
#define SOAP_TYPE_ns4__UriScheme_ (211)
/* Primitive ns4:UriScheme schema type: */
class SOAP_CMAC ns4__UriScheme_ : public xsd__anyType
{
public:
	enum ns4__UriScheme __item;
public:
	virtual int soap_type() const { return 211; } /* = unique id SOAP_TYPE_ns4__UriScheme_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__UriScheme_() : __item((enum ns4__UriScheme)0) { }
	virtual ~ns4__UriScheme_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__MapStyle_
#define SOAP_TYPE_ns4__MapStyle_ (213)
/* Primitive ns4:MapStyle schema type: */
class SOAP_CMAC ns4__MapStyle_ : public xsd__anyType
{
public:
	enum ns4__MapStyle __item;
public:
	virtual int soap_type() const { return 213; } /* = unique id SOAP_TYPE_ns4__MapStyle_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__MapStyle_() : __item((enum ns4__MapStyle)0) { }
	virtual ~ns4__MapStyle_() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ImageType_
#define SOAP_TYPE_ns4__ImageType_ (215)
/* Primitive ns4:ImageType schema type: */
class SOAP_CMAC ns4__ImageType_ : public xsd__anyType
{
public:
	enum ns4__ImageType __item;
public:
	virtual int soap_type() const { return 215; } /* = unique id SOAP_TYPE_ns4__ImageType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ImageType_() : __item((enum ns4__ImageType)0) { }
	virtual ~ns4__ImageType_() { }
};
#endif

#ifndef SOAP_TYPE_ns5__char__
#define SOAP_TYPE_ns5__char__ (217)
/* Primitive ns5:char schema type: */
class SOAP_CMAC ns5__char__ : public xsd__anyType
{
public:
	int __item;
public:
	virtual int soap_type() const { return 217; } /* = unique id SOAP_TYPE_ns5__char__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__char__() : __item(0) { }
	virtual ~ns5__char__() { }
};
#endif

#ifndef SOAP_TYPE_ns5__duration__
#define SOAP_TYPE_ns5__duration__ (219)
/* Primitive ns5:duration schema type: */
class SOAP_CMAC ns5__duration__ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 219; } /* = unique id SOAP_TYPE_ns5__duration__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__duration__() : __item(NULL) { }
	virtual ~ns5__duration__() { }
};
#endif

#ifndef SOAP_TYPE_ns5__guid__
#define SOAP_TYPE_ns5__guid__ (221)
/* Primitive ns5:guid schema type: */
class SOAP_CMAC ns5__guid__ : public xsd__anyType
{
public:
	char *__item;
public:
	virtual int soap_type() const { return 221; } /* = unique id SOAP_TYPE_ns5__guid__ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns5__guid__() : __item(NULL) { }
	virtual ~ns5__guid__() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ListingType_
#define SOAP_TYPE_ns6__ListingType_ (223)
/* Primitive ns6:ListingType schema type: */
class SOAP_CMAC ns6__ListingType_ : public xsd__anyType
{
public:
	enum ns6__ListingType __item;
public:
	virtual int soap_type() const { return 223; } /* = unique id SOAP_TYPE_ns6__ListingType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ListingType_() : __item((enum ns6__ListingType)0) { }
	virtual ~ns6__ListingType_() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SortOrder_
#define SOAP_TYPE_ns6__SortOrder_ (225)
/* Primitive ns6:SortOrder schema type: */
class SOAP_CMAC ns6__SortOrder_ : public xsd__anyType
{
public:
	enum ns6__SortOrder __item;
public:
	virtual int soap_type() const { return 225; } /* = unique id SOAP_TYPE_ns6__SortOrder_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SortOrder_() : __item((enum ns6__SortOrder)0) { }
	virtual ~ns6__SortOrder_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__TravelMode_
#define SOAP_TYPE_ns16__TravelMode_ (227)
/* Primitive ns16:TravelMode schema type: */
class SOAP_CMAC ns16__TravelMode_ : public xsd__anyType
{
public:
	enum ns16__TravelMode __item;
public:
	virtual int soap_type() const { return 227; } /* = unique id SOAP_TYPE_ns16__TravelMode_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__TravelMode_() : __item((enum ns16__TravelMode)0) { }
	virtual ~ns16__TravelMode_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RouteOptimization_
#define SOAP_TYPE_ns16__RouteOptimization_ (229)
/* Primitive ns16:RouteOptimization schema type: */
class SOAP_CMAC ns16__RouteOptimization_ : public xsd__anyType
{
public:
	enum ns16__RouteOptimization __item;
public:
	virtual int soap_type() const { return 229; } /* = unique id SOAP_TYPE_ns16__RouteOptimization_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RouteOptimization_() : __item((enum ns16__RouteOptimization)0) { }
	virtual ~ns16__RouteOptimization_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RoutePathType_
#define SOAP_TYPE_ns16__RoutePathType_ (231)
/* Primitive ns16:RoutePathType schema type: */
class SOAP_CMAC ns16__RoutePathType_ : public xsd__anyType
{
public:
	enum ns16__RoutePathType __item;
public:
	virtual int soap_type() const { return 231; } /* = unique id SOAP_TYPE_ns16__RoutePathType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RoutePathType_() : __item((enum ns16__RoutePathType)0) { }
	virtual ~ns16__RoutePathType_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__TrafficUsage_
#define SOAP_TYPE_ns16__TrafficUsage_ (233)
/* Primitive ns16:TrafficUsage schema type: */
class SOAP_CMAC ns16__TrafficUsage_ : public xsd__anyType
{
public:
	enum ns16__TrafficUsage __item;
public:
	virtual int soap_type() const { return 233; } /* = unique id SOAP_TYPE_ns16__TrafficUsage_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__TrafficUsage_() : __item((enum ns16__TrafficUsage)0) { }
	virtual ~ns16__TrafficUsage_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryItemHintType_
#define SOAP_TYPE_ns16__ItineraryItemHintType_ (235)
/* Primitive ns16:ItineraryItemHintType schema type: */
class SOAP_CMAC ns16__ItineraryItemHintType_ : public xsd__anyType
{
public:
	enum ns16__ItineraryItemHintType __item;
public:
	virtual int soap_type() const { return 235; } /* = unique id SOAP_TYPE_ns16__ItineraryItemHintType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ItineraryItemHintType_() : __item((enum ns16__ItineraryItemHintType)0) { }
	virtual ~ns16__ItineraryItemHintType_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ManeuverType_
#define SOAP_TYPE_ns16__ManeuverType_ (237)
/* Primitive ns16:ManeuverType schema type: */
class SOAP_CMAC ns16__ManeuverType_ : public xsd__anyType
{
public:
	enum ns16__ManeuverType __item;
public:
	virtual int soap_type() const { return 237; } /* = unique id SOAP_TYPE_ns16__ManeuverType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ManeuverType_() : __item((enum ns16__ManeuverType)0) { }
	virtual ~ns16__ManeuverType_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryWarningSeverity_
#define SOAP_TYPE_ns16__ItineraryWarningSeverity_ (239)
/* Primitive ns16:ItineraryWarningSeverity schema type: */
class SOAP_CMAC ns16__ItineraryWarningSeverity_ : public xsd__anyType
{
public:
	enum ns16__ItineraryWarningSeverity __item;
public:
	virtual int soap_type() const { return 239; } /* = unique id SOAP_TYPE_ns16__ItineraryWarningSeverity_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ItineraryWarningSeverity_() : __item((enum ns16__ItineraryWarningSeverity)0) { }
	virtual ~ns16__ItineraryWarningSeverity_() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryWarningType_
#define SOAP_TYPE_ns16__ItineraryWarningType_ (241)
/* Primitive ns16:ItineraryWarningType schema type: */
class SOAP_CMAC ns16__ItineraryWarningType_ : public xsd__anyType
{
public:
	enum ns16__ItineraryWarningType __item;
public:
	virtual int soap_type() const { return 241; } /* = unique id SOAP_TYPE_ns16__ItineraryWarningType_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ItineraryWarningType_() : __item((enum ns16__ItineraryWarningType)0) { }
	virtual ~ns16__ItineraryWarningType_() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfVersionInfo
#define SOAP_TYPE_ns1__ArrayOfVersionInfo (44)
/* ns1:ArrayOfVersionInfo */
class SOAP_CMAC ns1__ArrayOfVersionInfo : public xsd__anyType
{
public:
	int __sizeVersionInfo;	/* sequence of elements <VersionInfo> */
	class ns1__VersionInfo **VersionInfo;	/* optional element of type ns1:VersionInfo */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_ns1__ArrayOfVersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfVersionInfo() : __sizeVersionInfo(0), VersionInfo(NULL) { }
	virtual ~ns1__ArrayOfVersionInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__VersionInfo
#define SOAP_TYPE_ns1__VersionInfo (45)
/* ns1:VersionInfo */
class SOAP_CMAC ns1__VersionInfo : public xsd__anyType
{
public:
	char *Component;	/* optional element of type xsd:string */
	char *Version;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_ns1__VersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__VersionInfo() : Component(NULL), Version(NULL) { }
	virtual ~ns1__VersionInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CustomerInfoHeader
#define SOAP_TYPE_ns1__CustomerInfoHeader (46)
/* ns1:CustomerInfoHeader */
class SOAP_CMAC ns1__CustomerInfoHeader : public xsd__anyType
{
public:
	short CustomLogEntry;	/* required element of type xsd:short */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_ns1__CustomerInfoHeader */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CustomerInfoHeader() : CustomLogEntry(0) { }
	virtual ~ns1__CustomerInfoHeader() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserInfoHeader
#define SOAP_TYPE_ns1__UserInfoHeader (47)
/* ns1:UserInfoHeader */
class SOAP_CMAC ns1__UserInfoHeader : public xsd__anyType
{
public:
	class ns1__CultureInfo *Culture;	/* optional element of type ns1:CultureInfo */
	enum ns1__DistanceUnit DefaultDistanceUnit;	/* required element of type ns1:DistanceUnit */
	class ns1__CountryRegionContext *Context;	/* optional element of type ns1:CountryRegionContext */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_ns1__UserInfoHeader */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserInfoHeader() : Culture(NULL), DefaultDistanceUnit((enum ns1__DistanceUnit)0), Context(NULL) { }
	virtual ~ns1__UserInfoHeader() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CultureInfo
#define SOAP_TYPE_ns1__CultureInfo (48)
/* ns1:CultureInfo */
class SOAP_CMAC ns1__CultureInfo : public xsd__anyType
{
public:
	char *Name;	/* optional element of type xsd:string */
	int Lcid;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_ns1__CultureInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CultureInfo() : Name(NULL), Lcid(0) { }
	virtual ~ns1__CultureInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CountryRegionContext
#define SOAP_TYPE_ns1__CountryRegionContext (49)
/* ns1:CountryRegionContext */
class SOAP_CMAC ns1__CountryRegionContext : public xsd__anyType
{
public:
	int EntityID;	/* optional element of type xsd:int */
	char *Iso2;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_ns1__CountryRegionContext */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CountryRegionContext() : EntityID(0), Iso2(NULL) { }
	virtual ~ns1__CountryRegionContext() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfInt
#define SOAP_TYPE_ns1__ArrayOfInt (50)
/* ns1:ArrayOfInt */
class SOAP_CMAC ns1__ArrayOfInt : public xsd__anyType
{
public:
	int __sizeint_;	/* sequence of elements <int> */
	int *int_;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_ns1__ArrayOfInt */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfInt() : __sizeint_(0), int_(NULL) { }
	virtual ~ns1__ArrayOfInt() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfCountryRegionInfo
#define SOAP_TYPE_ns1__ArrayOfCountryRegionInfo (51)
/* ns1:ArrayOfCountryRegionInfo */
class SOAP_CMAC ns1__ArrayOfCountryRegionInfo : public xsd__anyType
{
public:
	int __sizeCountryRegionInfo;	/* sequence of elements <CountryRegionInfo> */
	class ns1__CountryRegionInfo **CountryRegionInfo;	/* optional element of type ns1:CountryRegionInfo */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_ns1__ArrayOfCountryRegionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfCountryRegionInfo() : __sizeCountryRegionInfo(0), CountryRegionInfo(NULL) { }
	virtual ~ns1__ArrayOfCountryRegionInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CountryRegionInfo
#define SOAP_TYPE_ns1__CountryRegionInfo (52)
/* ns1:CountryRegionInfo */
class SOAP_CMAC ns1__CountryRegionInfo : public xsd__anyType
{
public:
	int EntityID;	/* required element of type xsd:int */
	class ns1__LatLong *LatLong;	/* optional element of type ns1:LatLong */
	char *Iso2;	/* optional element of type xsd:string */
	char *Iso3;	/* optional element of type xsd:string */
	char *FriendlyName;	/* optional element of type xsd:string */
	char *OfficialName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_ns1__CountryRegionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CountryRegionInfo() : EntityID(0), LatLong(NULL), Iso2(NULL), Iso3(NULL), FriendlyName(NULL), OfficialName(NULL) { }
	virtual ~ns1__CountryRegionInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LatLong
#define SOAP_TYPE_ns1__LatLong (53)
/* ns1:LatLong */
class SOAP_CMAC ns1__LatLong : public xsd__anyType
{
public:
	double Latitude;	/* optional element of type xsd:double */
	double Longitude;	/* optional element of type xsd:double */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_ns1__LatLong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LatLong() : Latitude(0.000000), Longitude(0.000000) { }
	virtual ~ns1__LatLong() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfEntityType
#define SOAP_TYPE_ns1__ArrayOfEntityType (54)
/* ns1:ArrayOfEntityType */
class SOAP_CMAC ns1__ArrayOfEntityType : public xsd__anyType
{
public:
	int __sizeEntityType;	/* sequence of elements <EntityType> */
	class ns1__EntityType **EntityType;	/* optional element of type ns1:EntityType */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_ns1__ArrayOfEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfEntityType() : __sizeEntityType(0), EntityType(NULL) { }
	virtual ~ns1__ArrayOfEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EntityType
#define SOAP_TYPE_ns1__EntityType (55)
/* ns1:EntityType */
class SOAP_CMAC ns1__EntityType : public xsd__anyType
{
public:
	char *Name;	/* optional element of type xsd:string */
	char *DisplayName;	/* optional element of type xsd:string */
	char *ParentName;	/* optional element of type xsd:string */
	char *Definition;	/* optional element of type xsd:string */
	class ns1__ArrayOfEntityProperty *Properties;	/* optional element of type ns1:ArrayOfEntityProperty */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE_ns1__EntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EntityType() : Name(NULL), DisplayName(NULL), ParentName(NULL), Definition(NULL), Properties(NULL) { }
	virtual ~ns1__EntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfEntityProperty
#define SOAP_TYPE_ns1__ArrayOfEntityProperty (56)
/* ns1:ArrayOfEntityProperty */
class SOAP_CMAC ns1__ArrayOfEntityProperty : public xsd__anyType
{
public:
	int __sizeProperty;	/* sequence of elements <Property> */
	class ns1__EntityProperty **Property;	/* optional element of type ns1:EntityProperty */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_ns1__ArrayOfEntityProperty */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfEntityProperty() : __sizeProperty(0), Property(NULL) { }
	virtual ~ns1__ArrayOfEntityProperty() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EntityProperty
#define SOAP_TYPE_ns1__EntityProperty (57)
/* ns1:EntityProperty */
class SOAP_CMAC ns1__EntityProperty : public xsd__anyType
{
public:
	char *Name;	/* optional element of type xsd:string */
	char *DisplayName;	/* optional element of type xsd:string */
	char *DataType;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE_ns1__EntityProperty */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EntityProperty() : Name(NULL), DisplayName(NULL), DataType(NULL) { }
	virtual ~ns1__EntityProperty() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfString
#define SOAP_TYPE_ns1__ArrayOfString (58)
/* ns1:ArrayOfString */
class SOAP_CMAC ns1__ArrayOfString : public xsd__anyType
{
public:
	int __sizestring;	/* sequence of elements <string> */
	char **string;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE_ns1__ArrayOfString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfString() : __sizestring(0), string(NULL) { }
	virtual ~ns1__ArrayOfString() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDataSource
#define SOAP_TYPE_ns1__ArrayOfDataSource (59)
/* ns1:ArrayOfDataSource */
class SOAP_CMAC ns1__ArrayOfDataSource : public xsd__anyType
{
public:
	int __sizeDataSource;	/* sequence of elements <DataSource> */
	class ns1__DataSource **DataSource;	/* optional element of type ns1:DataSource */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_ns1__ArrayOfDataSource */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDataSource() : __sizeDataSource(0), DataSource(NULL) { }
	virtual ~ns1__ArrayOfDataSource() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DataSource
#define SOAP_TYPE_ns1__DataSource (60)
/* ns1:DataSource */
class SOAP_CMAC ns1__DataSource : public xsd__anyType
{
public:
	char *Name;	/* optional element of type xsd:string */
	char *Version;	/* optional element of type xsd:string */
	char *Description;	/* optional element of type xsd:string */
	enum ns1__DataSourceCapability Capability;	/* required element of type ns1:DataSourceCapability */
	ns1__ArrayOfInt *EntityExtent;	/* optional element of type ns1:ArrayOfInt */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE_ns1__DataSource */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DataSource() : Name(NULL), Version(NULL), Description(NULL), Capability((enum ns1__DataSourceCapability)0), EntityExtent(NULL) { }
	virtual ~ns1__DataSource() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfLatLong
#define SOAP_TYPE_ns1__ArrayOfLatLong (61)
/* ns1:ArrayOfLatLong */
class SOAP_CMAC ns1__ArrayOfLatLong : public xsd__anyType
{
public:
	int __sizeLatLong;	/* sequence of elements <LatLong> */
	ns1__LatLong **LatLong;	/* optional element of type ns1:LatLong */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE_ns1__ArrayOfLatLong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfLatLong() : __sizeLatLong(0), LatLong(NULL) { }
	virtual ~ns1__ArrayOfLatLong() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDouble
#define SOAP_TYPE_ns1__ArrayOfDouble (62)
/* ns1:ArrayOfDouble */
class SOAP_CMAC ns1__ArrayOfDouble : public xsd__anyType
{
public:
	int __sizedouble_;	/* sequence of elements <double> */
	double *double_;	/* optional element of type xsd:double */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_ns1__ArrayOfDouble */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDouble() : __sizedouble_(0), double_(NULL) { }
	virtual ~ns1__ArrayOfDouble() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TokenSpecification
#define SOAP_TYPE_ns1__TokenSpecification (63)
/* ns1:TokenSpecification */
class SOAP_CMAC ns1__TokenSpecification : public xsd__anyType
{
public:
	char *ClientIPAddress;	/* optional element of type xsd:string */
	int TokenValidityDurationMinutes;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE_ns1__TokenSpecification */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TokenSpecification() : ClientIPAddress(NULL), TokenValidityDurationMinutes(0) { }
	virtual ~ns1__TokenSpecification() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetVersionInfo
#define SOAP_TYPE__ns1__GetVersionInfo (64)
/* ns1:GetVersionInfo */
class SOAP_CMAC _ns1__GetVersionInfo
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE__ns1__GetVersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetVersionInfo() : soap(NULL) { }
	virtual ~_ns1__GetVersionInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetVersionInfoResponse
#define SOAP_TYPE__ns1__GetVersionInfoResponse (65)
/* ns1:GetVersionInfoResponse */
class SOAP_CMAC _ns1__GetVersionInfoResponse
{
public:
	ns1__ArrayOfVersionInfo *GetVersionInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfVersionInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE__ns1__GetVersionInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetVersionInfoResponse() : GetVersionInfoResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetVersionInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCountryRegionInfo
#define SOAP_TYPE__ns1__GetCountryRegionInfo (66)
/* ns1:GetCountryRegionInfo */
class SOAP_CMAC _ns1__GetCountryRegionInfo
{
public:
	ns1__ArrayOfInt *entityIDs;	/* optional element of type ns1:ArrayOfInt */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE__ns1__GetCountryRegionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCountryRegionInfo() : entityIDs(NULL), soap(NULL) { }
	virtual ~_ns1__GetCountryRegionInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCountryRegionInfoResponse
#define SOAP_TYPE__ns1__GetCountryRegionInfoResponse (67)
/* ns1:GetCountryRegionInfoResponse */
class SOAP_CMAC _ns1__GetCountryRegionInfoResponse
{
public:
	ns1__ArrayOfCountryRegionInfo *GetCountryRegionInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfCountryRegionInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE__ns1__GetCountryRegionInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCountryRegionInfoResponse() : GetCountryRegionInfoResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetCountryRegionInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetEntityTypes
#define SOAP_TYPE__ns1__GetEntityTypes (68)
/* ns1:GetEntityTypes */
class SOAP_CMAC _ns1__GetEntityTypes
{
public:
	char *dataSourceName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE__ns1__GetEntityTypes */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetEntityTypes() : dataSourceName(NULL), soap(NULL) { }
	virtual ~_ns1__GetEntityTypes() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetEntityTypesResponse
#define SOAP_TYPE__ns1__GetEntityTypesResponse (69)
/* ns1:GetEntityTypesResponse */
class SOAP_CMAC _ns1__GetEntityTypesResponse
{
public:
	ns1__ArrayOfEntityType *GetEntityTypesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE__ns1__GetEntityTypesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetEntityTypesResponse() : GetEntityTypesResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetEntityTypesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetDataSourceInfo
#define SOAP_TYPE__ns1__GetDataSourceInfo (70)
/* ns1:GetDataSourceInfo */
class SOAP_CMAC _ns1__GetDataSourceInfo
{
public:
	ns1__ArrayOfString *dataSourceNames;	/* optional element of type ns1:ArrayOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE__ns1__GetDataSourceInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetDataSourceInfo() : dataSourceNames(NULL), soap(NULL) { }
	virtual ~_ns1__GetDataSourceInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetDataSourceInfoResponse
#define SOAP_TYPE__ns1__GetDataSourceInfoResponse (71)
/* ns1:GetDataSourceInfoResponse */
class SOAP_CMAC _ns1__GetDataSourceInfoResponse
{
public:
	ns1__ArrayOfDataSource *GetDataSourceInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfDataSource */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE__ns1__GetDataSourceInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetDataSourceInfoResponse() : GetDataSourceInfoResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetDataSourceInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetGreatCircleDistances
#define SOAP_TYPE__ns1__GetGreatCircleDistances (72)
/* ns1:GetGreatCircleDistances */
class SOAP_CMAC _ns1__GetGreatCircleDistances
{
public:
	ns1__ArrayOfLatLong *latLongs;	/* optional element of type ns1:ArrayOfLatLong */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE__ns1__GetGreatCircleDistances */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetGreatCircleDistances() : latLongs(NULL), soap(NULL) { }
	virtual ~_ns1__GetGreatCircleDistances() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetGreatCircleDistancesResponse
#define SOAP_TYPE__ns1__GetGreatCircleDistancesResponse (73)
/* ns1:GetGreatCircleDistancesResponse */
class SOAP_CMAC _ns1__GetGreatCircleDistancesResponse
{
public:
	ns1__ArrayOfDouble *GetGreatCircleDistancesResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfDouble */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE__ns1__GetGreatCircleDistancesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetGreatCircleDistancesResponse() : GetGreatCircleDistancesResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetGreatCircleDistancesResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetClientToken
#define SOAP_TYPE__ns1__GetClientToken (74)
/* ns1:GetClientToken */
class SOAP_CMAC _ns1__GetClientToken
{
public:
	ns1__TokenSpecification *specification;	/* optional element of type ns1:TokenSpecification */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 74; } /* = unique id SOAP_TYPE__ns1__GetClientToken */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetClientToken() : specification(NULL), soap(NULL) { }
	virtual ~_ns1__GetClientToken() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetClientTokenResponse
#define SOAP_TYPE__ns1__GetClientTokenResponse (75)
/* ns1:GetClientTokenResponse */
class SOAP_CMAC _ns1__GetClientTokenResponse
{
public:
	char *GetClientTokenResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE__ns1__GetClientTokenResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetClientTokenResponse() : GetClientTokenResult(NULL), soap(NULL) { }
	virtual ~_ns1__GetClientTokenResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns3__Search
#define SOAP_TYPE__ns3__Search (76)
/* ns3:Search */
class SOAP_CMAC _ns3__Search
{
public:
	class ns6__SearchRequest *request;	/* optional element of type ns6:SearchRequest */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 76; } /* = unique id SOAP_TYPE__ns3__Search */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__Search() : request(NULL), soap(NULL) { }
	virtual ~_ns3__Search() { }
};
#endif

#ifndef SOAP_TYPE__ns3__SearchResponse
#define SOAP_TYPE__ns3__SearchResponse (77)
/* ns3:SearchResponse */
class SOAP_CMAC _ns3__SearchResponse
{
public:
	class ns6__SearchResponse *SearchResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns6:SearchResponse */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE__ns3__SearchResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns3__SearchResponse() : SearchResult(NULL), soap(NULL) { }
	virtual ~_ns3__SearchResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns4__RequestBase
#define SOAP_TYPE_ns4__RequestBase (78)
/* ns4:RequestBase */
class SOAP_CMAC ns4__RequestBase : public xsd__anyType
{
public:
	class ns4__Credentials *Credentials;	/* optional element of type ns4:Credentials */
	char *Culture;	/* optional element of type xsd:string */
	class ns4__ExecutionOptions *ExecutionOptions;	/* optional element of type ns4:ExecutionOptions */
	class ns4__UserProfile *UserProfile;	/* optional element of type ns4:UserProfile */
public:
	virtual int soap_type() const { return 78; } /* = unique id SOAP_TYPE_ns4__RequestBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__RequestBase() : Credentials(NULL), Culture(NULL), ExecutionOptions(NULL), UserProfile(NULL) { }
	virtual ~ns4__RequestBase() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Credentials
#define SOAP_TYPE_ns4__Credentials (79)
/* ns4:Credentials */
class SOAP_CMAC ns4__Credentials : public xsd__anyType
{
public:
	char *ApplicationId;	/* optional element of type xsd:string */
	char *Token;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE_ns4__Credentials */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Credentials() : ApplicationId(NULL), Token(NULL) { }
	virtual ~ns4__Credentials() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ExecutionOptions
#define SOAP_TYPE_ns4__ExecutionOptions (80)
/* ns4:ExecutionOptions */
class SOAP_CMAC ns4__ExecutionOptions : public xsd__anyType
{
public:
	bool *SuppressFaults;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 80; } /* = unique id SOAP_TYPE_ns4__ExecutionOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ExecutionOptions() : SuppressFaults(NULL) { }
	virtual ~ns4__ExecutionOptions() { }
};
#endif

#ifndef SOAP_TYPE_ns4__UserProfile
#define SOAP_TYPE_ns4__UserProfile (81)
/* ns4:UserProfile */
class SOAP_CMAC ns4__UserProfile : public xsd__anyType
{
public:
	class ns4__Heading *CurrentHeading;	/* optional element of type ns4:Heading */
	class ns4__UserLocation *CurrentLocation;	/* optional element of type ns4:UserLocation */
	enum ns4__DeviceType *DeviceType;	/* optional element of type ns4:DeviceType */
	enum ns4__DistanceUnit *DistanceUnit;	/* optional element of type ns4:DistanceUnit */
	char *IPAddress;	/* optional element of type xsd:string */
	class ns4__ShapeBase *MapView;	/* optional element of type ns4:ShapeBase */
	class ns4__SizeOfint *ScreenSize;	/* optional element of type ns4:SizeOfint */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE_ns4__UserProfile */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__UserProfile() : CurrentHeading(NULL), CurrentLocation(NULL), DeviceType(NULL), DistanceUnit(NULL), IPAddress(NULL), MapView(NULL), ScreenSize(NULL) { }
	virtual ~ns4__UserProfile() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Heading
#define SOAP_TYPE_ns4__Heading (82)
/* ns4:Heading */
class SOAP_CMAC ns4__Heading : public xsd__anyType
{
public:
	double *Orientation;	/* optional element of type xsd:double */
public:
	virtual int soap_type() const { return 82; } /* = unique id SOAP_TYPE_ns4__Heading */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Heading() : Orientation(NULL) { }
	virtual ~ns4__Heading() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Location
#define SOAP_TYPE_ns4__Location (84)
/* ns4:Location */
class SOAP_CMAC ns4__Location : public xsd__anyType
{
public:
	double *Altitude;	/* optional element of type xsd:double */
	double *Latitude;	/* optional element of type xsd:double */
	double *Longitude;	/* optional element of type xsd:double */
public:
	virtual int soap_type() const { return 84; } /* = unique id SOAP_TYPE_ns4__Location */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Location() : Altitude(NULL), Latitude(NULL), Longitude(NULL) { }
	virtual ~ns4__Location() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ShapeBase
#define SOAP_TYPE_ns4__ShapeBase (86)
/* Primitive ns4:ShapeBase schema type: */
class SOAP_CMAC ns4__ShapeBase : public xsd__anyType
{
public:
	virtual int soap_type() const { return 86; } /* = unique id SOAP_TYPE_ns4__ShapeBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ShapeBase()  { }
	virtual ~ns4__ShapeBase() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ArrayOfLocation
#define SOAP_TYPE_ns4__ArrayOfLocation (90)
/* ns4:ArrayOfLocation */
class SOAP_CMAC ns4__ArrayOfLocation : public xsd__anyType
{
public:
	int __sizeLocation;	/* sequence of elements <Location> */
	ns4__Location **Location;	/* optional element of type ns4:Location */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE_ns4__ArrayOfLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ArrayOfLocation() : __sizeLocation(0), Location(NULL) { }
	virtual ~ns4__ArrayOfLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns4__SizeOfint
#define SOAP_TYPE_ns4__SizeOfint (91)
/* ns4:SizeOfint */
class SOAP_CMAC ns4__SizeOfint : public xsd__anyType
{
public:
	int *Height;	/* optional element of type xsd:int */
	int *Width;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 91; } /* = unique id SOAP_TYPE_ns4__SizeOfint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__SizeOfint() : Height(NULL), Width(NULL) { }
	virtual ~ns4__SizeOfint() { }
};
#endif

#ifndef SOAP_TYPE_ns4__FilterExpressionBase
#define SOAP_TYPE_ns4__FilterExpressionBase (92)
/* Primitive ns4:FilterExpressionBase schema type: */
class SOAP_CMAC ns4__FilterExpressionBase : public xsd__anyType
{
public:
	virtual int soap_type() const { return 92; } /* = unique id SOAP_TYPE_ns4__FilterExpressionBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__FilterExpressionBase()  { }
	virtual ~ns4__FilterExpressionBase() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ArrayOfFilterExpressionBase
#define SOAP_TYPE_ns4__ArrayOfFilterExpressionBase (95)
/* ns4:ArrayOfFilterExpressionBase */
class SOAP_CMAC ns4__ArrayOfFilterExpressionBase : public xsd__anyType
{
public:
	int __sizeFilterExpressionBase;	/* sequence of elements <FilterExpressionBase> */
	ns4__FilterExpressionBase **FilterExpressionBase;	/* optional element of type ns4:FilterExpressionBase */
public:
	virtual int soap_type() const { return 95; } /* = unique id SOAP_TYPE_ns4__ArrayOfFilterExpressionBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ArrayOfFilterExpressionBase() : __sizeFilterExpressionBase(0), FilterExpressionBase(NULL) { }
	virtual ~ns4__ArrayOfFilterExpressionBase() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ResponseBase
#define SOAP_TYPE_ns4__ResponseBase (96)
/* ns4:ResponseBase */
class SOAP_CMAC ns4__ResponseBase : public xsd__anyType
{
public:
	class ns4__ResponseSummary *ResponseSummary;	/* optional element of type ns4:ResponseSummary */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE_ns4__ResponseBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ResponseBase() : ResponseSummary(NULL) { }
	virtual ~ns4__ResponseBase() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ResponseSummary
#define SOAP_TYPE_ns4__ResponseSummary (97)
/* ns4:ResponseSummary */
class SOAP_CMAC ns4__ResponseSummary : public xsd__anyType
{
public:
	enum ns4__AuthenticationResultCode *AuthenticationResultCode;	/* optional element of type ns4:AuthenticationResultCode */
	char *Copyright;	/* optional element of type xsd:string */
	char *FaultReason;	/* optional element of type xsd:string */
	enum ns4__ResponseStatusCode *StatusCode;	/* optional element of type ns4:ResponseStatusCode */
	char *TraceId;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 97; } /* = unique id SOAP_TYPE_ns4__ResponseSummary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ResponseSummary() : AuthenticationResultCode(NULL), Copyright(NULL), FaultReason(NULL), StatusCode(NULL), TraceId(NULL) { }
	virtual ~ns4__ResponseSummary() { }
};
#endif

#ifndef SOAP_TYPE_ns4__GeocodeResult
#define SOAP_TYPE_ns4__GeocodeResult (98)
/* ns4:GeocodeResult */
class SOAP_CMAC ns4__GeocodeResult : public xsd__anyType
{
public:
	class ns4__Address *Address;	/* optional element of type ns4:Address */
	class ns4__Rectangle *BestView;	/* optional element of type ns4:Rectangle */
	enum ns4__Confidence *Confidence;	/* optional element of type ns4:Confidence */
	char *DisplayName;	/* optional element of type xsd:string */
	char *EntityType;	/* optional element of type xsd:string */
	class ns4__ArrayOfGeocodeLocation *Locations;	/* optional element of type ns4:ArrayOfGeocodeLocation */
	class ns7__ArrayOfstring *MatchCodes;	/* optional element of type ns7:ArrayOfstring */
public:
	virtual int soap_type() const { return 98; } /* = unique id SOAP_TYPE_ns4__GeocodeResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__GeocodeResult() : Address(NULL), BestView(NULL), Confidence(NULL), DisplayName(NULL), EntityType(NULL), Locations(NULL), MatchCodes(NULL) { }
	virtual ~ns4__GeocodeResult() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Address
#define SOAP_TYPE_ns4__Address (99)
/* ns4:Address */
class SOAP_CMAC ns4__Address : public xsd__anyType
{
public:
	char *AddressLine;	/* optional element of type xsd:string */
	char *AdminDistrict;	/* optional element of type xsd:string */
	char *CountryRegion;	/* optional element of type xsd:string */
	char *District;	/* optional element of type xsd:string */
	char *FormattedAddress;	/* optional element of type xsd:string */
	char *Locality;	/* optional element of type xsd:string */
	char *PostalCode;	/* optional element of type xsd:string */
	char *PostalTown;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE_ns4__Address */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Address() : AddressLine(NULL), AdminDistrict(NULL), CountryRegion(NULL), District(NULL), FormattedAddress(NULL), Locality(NULL), PostalCode(NULL), PostalTown(NULL) { }
	virtual ~ns4__Address() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ArrayOfGeocodeLocation
#define SOAP_TYPE_ns4__ArrayOfGeocodeLocation (100)
/* ns4:ArrayOfGeocodeLocation */
class SOAP_CMAC ns4__ArrayOfGeocodeLocation : public xsd__anyType
{
public:
	int __sizeGeocodeLocation;	/* sequence of elements <GeocodeLocation> */
	class ns4__GeocodeLocation **GeocodeLocation;	/* optional element of type ns4:GeocodeLocation */
public:
	virtual int soap_type() const { return 100; } /* = unique id SOAP_TYPE_ns4__ArrayOfGeocodeLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ArrayOfGeocodeLocation() : __sizeGeocodeLocation(0), GeocodeLocation(NULL) { }
	virtual ~ns4__ArrayOfGeocodeLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ArrayOfGeocodeResult
#define SOAP_TYPE_ns4__ArrayOfGeocodeResult (101)
/* ns4:ArrayOfGeocodeResult */
class SOAP_CMAC ns4__ArrayOfGeocodeResult : public xsd__anyType
{
public:
	int __sizeGeocodeResult;	/* sequence of elements <GeocodeResult> */
	ns4__GeocodeResult **GeocodeResult;	/* optional element of type ns4:GeocodeResult */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE_ns4__ArrayOfGeocodeResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ArrayOfGeocodeResult() : __sizeGeocodeResult(0), GeocodeResult(NULL) { }
	virtual ~ns4__ArrayOfGeocodeResult() { }
};
#endif

#ifndef SOAP_TYPE_ns4__RangeOfint
#define SOAP_TYPE_ns4__RangeOfint (102)
/* ns4:RangeOfint */
class SOAP_CMAC ns4__RangeOfint : public xsd__anyType
{
public:
	int *From;	/* optional element of type xsd:int */
	int *To;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE_ns4__RangeOfint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__RangeOfint() : From(NULL), To(NULL) { }
	virtual ~ns4__RangeOfint() { }
};
#endif

#ifndef SOAP_TYPE_ns4__RangeOfdateTime
#define SOAP_TYPE_ns4__RangeOfdateTime (103)
/* ns4:RangeOfdateTime */
class SOAP_CMAC ns4__RangeOfdateTime : public xsd__anyType
{
public:
	time_t *From;	/* optional element of type xsd:dateTime */
	time_t *To;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE_ns4__RangeOfdateTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__RangeOfdateTime() : From(NULL), To(NULL) { }
	virtual ~ns4__RangeOfdateTime() { }
};
#endif

#ifndef SOAP_TYPE_ns4__ArrayOfPushpin
#define SOAP_TYPE_ns4__ArrayOfPushpin (104)
/* ns4:ArrayOfPushpin */
class SOAP_CMAC ns4__ArrayOfPushpin : public xsd__anyType
{
public:
	int __sizePushpin;	/* sequence of elements <Pushpin> */
	class ns4__Pushpin **Pushpin;	/* optional element of type ns4:Pushpin */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE_ns4__ArrayOfPushpin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__ArrayOfPushpin() : __sizePushpin(0), Pushpin(NULL) { }
	virtual ~ns4__ArrayOfPushpin() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Pushpin
#define SOAP_TYPE_ns4__Pushpin (105)
/* ns4:Pushpin */
class SOAP_CMAC ns4__Pushpin : public xsd__anyType
{
public:
	char *IconStyle;	/* optional element of type xsd:string */
	char *Label;	/* optional element of type xsd:string */
	ns4__Location *Location;	/* optional element of type ns4:Location */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE_ns4__Pushpin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Pushpin() : IconStyle(NULL), Label(NULL), Location(NULL) { }
	virtual ~ns4__Pushpin() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SearchOptions
#define SOAP_TYPE_ns6__SearchOptions (107)
/* ns6:SearchOptions */
class SOAP_CMAC ns6__SearchOptions : public xsd__anyType
{
public:
	bool *AutocorrectQuery;	/* optional element of type xsd:boolean */
	int *Count;	/* optional element of type xsd:int */
	ns4__FilterExpressionBase *Filters;	/* optional element of type ns4:FilterExpressionBase */
	enum ns6__ListingType *ListingType;	/* optional element of type ns6:ListingType */
	bool *ParseOnly;	/* optional element of type xsd:boolean */
	enum ns6__SortOrder *SortOrder;	/* optional element of type ns6:SortOrder */
	int *StartingIndex;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE_ns6__SearchOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SearchOptions() : AutocorrectQuery(NULL), Count(NULL), Filters(NULL), ListingType(NULL), ParseOnly(NULL), SortOrder(NULL), StartingIndex(NULL) { }
	virtual ~ns6__SearchOptions() { }
};
#endif

#ifndef SOAP_TYPE_ns6__StructuredSearchQuery
#define SOAP_TYPE_ns6__StructuredSearchQuery (108)
/* ns6:StructuredSearchQuery */
class SOAP_CMAC ns6__StructuredSearchQuery : public xsd__anyType
{
public:
	char *Keyword;	/* optional element of type xsd:string */
	char *Location;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE_ns6__StructuredSearchQuery */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__StructuredSearchQuery() : Keyword(NULL), Location(NULL) { }
	virtual ~ns6__StructuredSearchQuery() { }
};
#endif

#ifndef SOAP_TYPE_ns6__QuerySuggestion
#define SOAP_TYPE_ns6__QuerySuggestion (110)
/* ns6:QuerySuggestion */
class SOAP_CMAC ns6__QuerySuggestion : public xsd__anyType
{
public:
	char *Query;	/* optional element of type xsd:string */
	ns6__StructuredSearchQuery *StructuredQuery;	/* optional element of type ns6:StructuredSearchQuery */
public:
	virtual int soap_type() const { return 110; } /* = unique id SOAP_TYPE_ns6__QuerySuggestion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__QuerySuggestion() : Query(NULL), StructuredQuery(NULL) { }
	virtual ~ns6__QuerySuggestion() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfSearchResultSet
#define SOAP_TYPE_ns6__ArrayOfSearchResultSet (111)
/* ns6:ArrayOfSearchResultSet */
class SOAP_CMAC ns6__ArrayOfSearchResultSet : public xsd__anyType
{
public:
	int __sizeSearchResultSet;	/* sequence of elements <SearchResultSet> */
	class ns6__SearchResultSet **SearchResultSet;	/* optional element of type ns6:SearchResultSet */
public:
	virtual int soap_type() const { return 111; } /* = unique id SOAP_TYPE_ns6__ArrayOfSearchResultSet */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfSearchResultSet() : __sizeSearchResultSet(0), SearchResultSet(NULL) { }
	virtual ~ns6__ArrayOfSearchResultSet() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SearchResultSet
#define SOAP_TYPE_ns6__SearchResultSet (112)
/* ns6:SearchResultSet */
class SOAP_CMAC ns6__SearchResultSet : public xsd__anyType
{
public:
	class ns6__ArrayOfSearchRegion *AlternateSearchRegions;	/* optional element of type ns6:ArrayOfSearchRegion */
	class ns6__ArrayOfAvailableFilter *AvailableFilters;	/* optional element of type ns6:ArrayOfAvailableFilter */
	class ns6__ArrayOfCategoryCount *CategoryCounts;	/* optional element of type ns6:ArrayOfCategoryCount */
	int *EstimatedMatches;	/* optional element of type xsd:int */
	char *ListingType;	/* optional element of type xsd:string */
	class ns6__Parse *Parse;	/* optional element of type ns6:Parse */
	bool *QueryCorrected;	/* optional element of type xsd:boolean */
	class ns6__ArrayOfSearchResultBase *Results;	/* optional element of type ns6:ArrayOfSearchResultBase */
	class ns6__SearchRegion *SearchRegion;	/* optional element of type ns6:SearchRegion */
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE_ns6__SearchResultSet */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SearchResultSet() : AlternateSearchRegions(NULL), AvailableFilters(NULL), CategoryCounts(NULL), EstimatedMatches(NULL), ListingType(NULL), Parse(NULL), QueryCorrected(NULL), Results(NULL), SearchRegion(NULL) { }
	virtual ~ns6__SearchResultSet() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfSearchRegion
#define SOAP_TYPE_ns6__ArrayOfSearchRegion (113)
/* ns6:ArrayOfSearchRegion */
class SOAP_CMAC ns6__ArrayOfSearchRegion : public xsd__anyType
{
public:
	int __sizeSearchRegion;	/* sequence of elements <SearchRegion> */
	ns6__SearchRegion **SearchRegion;	/* optional element of type ns6:SearchRegion */
public:
	virtual int soap_type() const { return 113; } /* = unique id SOAP_TYPE_ns6__ArrayOfSearchRegion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfSearchRegion() : __sizeSearchRegion(0), SearchRegion(NULL) { }
	virtual ~ns6__ArrayOfSearchRegion() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SearchRegion
#define SOAP_TYPE_ns6__SearchRegion (114)
/* ns6:SearchRegion */
class SOAP_CMAC ns6__SearchRegion : public xsd__anyType
{
public:
	ns4__ShapeBase *BoundingArea;	/* optional element of type ns4:ShapeBase */
	ns4__GeocodeResult *GeocodeLocation;	/* optional element of type ns4:GeocodeResult */
	char *Source;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE_ns6__SearchRegion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SearchRegion() : BoundingArea(NULL), GeocodeLocation(NULL), Source(NULL) { }
	virtual ~ns6__SearchRegion() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfAvailableFilter
#define SOAP_TYPE_ns6__ArrayOfAvailableFilter (115)
/* ns6:ArrayOfAvailableFilter */
class SOAP_CMAC ns6__ArrayOfAvailableFilter : public xsd__anyType
{
public:
	int __sizeAvailableFilter;	/* sequence of elements <AvailableFilter> */
	class ns6__AvailableFilter **AvailableFilter;	/* optional element of type ns6:AvailableFilter */
public:
	virtual int soap_type() const { return 115; } /* = unique id SOAP_TYPE_ns6__ArrayOfAvailableFilter */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfAvailableFilter() : __sizeAvailableFilter(0), AvailableFilter(NULL) { }
	virtual ~ns6__ArrayOfAvailableFilter() { }
};
#endif

#ifndef SOAP_TYPE_ns6__AvailableFilter
#define SOAP_TYPE_ns6__AvailableFilter (116)
/* ns6:AvailableFilter */
class SOAP_CMAC ns6__AvailableFilter : public xsd__anyType
{
public:
	int *PropertyId;	/* optional element of type xsd:int */
	char *PropertyName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 116; } /* = unique id SOAP_TYPE_ns6__AvailableFilter */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__AvailableFilter() : PropertyId(NULL), PropertyName(NULL) { }
	virtual ~ns6__AvailableFilter() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Neighborhood
#define SOAP_TYPE_ns6__Neighborhood (119)
/* ns6:Neighborhood */
class SOAP_CMAC ns6__Neighborhood : public xsd__anyType
{
public:
	char *City;	/* optional element of type xsd:string */
	int *Id;	/* optional element of type xsd:int */
	char *Name;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 119; } /* = unique id SOAP_TYPE_ns6__Neighborhood */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Neighborhood() : City(NULL), Id(NULL), Name(NULL) { }
	virtual ~ns6__Neighborhood() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Category
#define SOAP_TYPE_ns6__Category (120)
/* ns6:Category */
class SOAP_CMAC ns6__Category : public xsd__anyType
{
public:
	int *Id;	/* optional element of type xsd:int */
	char *Name;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE_ns6__Category */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Category() : Id(NULL), Name(NULL) { }
	virtual ~ns6__Category() { }
};
#endif

#ifndef SOAP_TYPE_ns6__FilterValue
#define SOAP_TYPE_ns6__FilterValue (121)
/* ns6:FilterValue */
class SOAP_CMAC ns6__FilterValue : public xsd__anyType
{
public:
	int *Id;	/* optional element of type xsd:int */
	char *Name;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE_ns6__FilterValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__FilterValue() : Id(NULL), Name(NULL) { }
	virtual ~ns6__FilterValue() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfCategoryCount
#define SOAP_TYPE_ns6__ArrayOfCategoryCount (122)
/* ns6:ArrayOfCategoryCount */
class SOAP_CMAC ns6__ArrayOfCategoryCount : public xsd__anyType
{
public:
	int __sizeCategoryCount;	/* sequence of elements <CategoryCount> */
	class ns6__CategoryCount **CategoryCount;	/* optional element of type ns6:CategoryCount */
public:
	virtual int soap_type() const { return 122; } /* = unique id SOAP_TYPE_ns6__ArrayOfCategoryCount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfCategoryCount() : __sizeCategoryCount(0), CategoryCount(NULL) { }
	virtual ~ns6__ArrayOfCategoryCount() { }
};
#endif

#ifndef SOAP_TYPE_ns6__CategoryCount
#define SOAP_TYPE_ns6__CategoryCount (123)
/* ns6:CategoryCount */
class SOAP_CMAC ns6__CategoryCount : public xsd__anyType
{
public:
	ns6__Category *Category;	/* optional element of type ns6:Category */
	int *Count;	/* optional element of type xsd:int */
	class ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6 *CountByNeighborhood;	/* optional element of type ns7:ArrayOfKeyValueOfNeighborhoodintkC8b0tr6 */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE_ns6__CategoryCount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__CategoryCount() : Category(NULL), Count(NULL), CountByNeighborhood(NULL) { }
	virtual ~ns6__CategoryCount() { }
};
#endif

#ifndef SOAP_TYPE_ns6__Parse
#define SOAP_TYPE_ns6__Parse (124)
/* ns6:Parse */
class SOAP_CMAC ns6__Parse : public xsd__anyType
{
public:
	ns4__Address *Address;	/* optional element of type ns4:Address */
	char *Keyword;	/* optional element of type xsd:string */
	char *Landmark;	/* optional element of type xsd:string */
	char *LocationSeparator;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 124; } /* = unique id SOAP_TYPE_ns6__Parse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__Parse() : Address(NULL), Keyword(NULL), Landmark(NULL), LocationSeparator(NULL) { }
	virtual ~ns6__Parse() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfSearchResultBase
#define SOAP_TYPE_ns6__ArrayOfSearchResultBase (125)
/* ns6:ArrayOfSearchResultBase */
class SOAP_CMAC ns6__ArrayOfSearchResultBase : public xsd__anyType
{
public:
	int __sizeSearchResultBase;	/* sequence of elements <SearchResultBase> */
	class ns6__SearchResultBase **SearchResultBase;	/* optional element of type ns6:SearchResultBase */
public:
	virtual int soap_type() const { return 125; } /* = unique id SOAP_TYPE_ns6__ArrayOfSearchResultBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfSearchResultBase() : __sizeSearchResultBase(0), SearchResultBase(NULL) { }
	virtual ~ns6__ArrayOfSearchResultBase() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SearchResultBase
#define SOAP_TYPE_ns6__SearchResultBase (126)
/* ns6:SearchResultBase */
class SOAP_CMAC ns6__SearchResultBase : public xsd__anyType
{
public:
	double *Distance;	/* optional element of type xsd:double */
	char *Id;	/* optional element of type xsd:string */
	class ns6__LocationData *LocationData;	/* optional element of type ns6:LocationData */
	char *Name;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE_ns6__SearchResultBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SearchResultBase() : Distance(NULL), Id(NULL), LocationData(NULL), Name(NULL) { }
	virtual ~ns6__SearchResultBase() { }
};
#endif

#ifndef SOAP_TYPE_ns6__LocationData
#define SOAP_TYPE_ns6__LocationData (127)
/* ns6:LocationData */
class SOAP_CMAC ns6__LocationData : public xsd__anyType
{
public:
	enum ns4__Confidence *Confidence;	/* optional element of type ns4:Confidence */
	ns4__ArrayOfGeocodeLocation *Locations;	/* optional element of type ns4:ArrayOfGeocodeLocation */
	ns7__ArrayOfstring *MatchCodes;	/* optional element of type ns7:ArrayOfstring */
public:
	virtual int soap_type() const { return 127; } /* = unique id SOAP_TYPE_ns6__LocationData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__LocationData() : Confidence(NULL), Locations(NULL), MatchCodes(NULL) { }
	virtual ~ns6__LocationData() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfCategory
#define SOAP_TYPE_ns6__ArrayOfCategory (130)
/* ns6:ArrayOfCategory */
class SOAP_CMAC ns6__ArrayOfCategory : public xsd__anyType
{
public:
	int __sizeCategory;	/* sequence of elements <Category> */
	ns6__Category **Category;	/* optional element of type ns6:Category */
public:
	virtual int soap_type() const { return 130; } /* = unique id SOAP_TYPE_ns6__ArrayOfCategory */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfCategory() : __sizeCategory(0), Category(NULL) { }
	virtual ~ns6__ArrayOfCategory() { }
};
#endif

#ifndef SOAP_TYPE_ns6__CategorySpecificPropertySet
#define SOAP_TYPE_ns6__CategorySpecificPropertySet (131)
/* ns6:CategorySpecificPropertySet */
class SOAP_CMAC ns6__CategorySpecificPropertySet : public xsd__anyType
{
public:
	char *CategoryName;	/* optional element of type xsd:string */
	class ns7__ArrayOfKeyValueOfstringanyType *Properties;	/* optional element of type ns7:ArrayOfKeyValueOfstringanyType */
public:
	virtual int soap_type() const { return 131; } /* = unique id SOAP_TYPE_ns6__CategorySpecificPropertySet */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__CategorySpecificPropertySet() : CategoryName(NULL), Properties(NULL) { }
	virtual ~ns6__CategorySpecificPropertySet() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ArrayOfNeighborhood
#define SOAP_TYPE_ns6__ArrayOfNeighborhood (132)
/* ns6:ArrayOfNeighborhood */
class SOAP_CMAC ns6__ArrayOfNeighborhood : public xsd__anyType
{
public:
	int __sizeNeighborhood;	/* sequence of elements <Neighborhood> */
	ns6__Neighborhood **Neighborhood;	/* optional element of type ns6:Neighborhood */
public:
	virtual int soap_type() const { return 132; } /* = unique id SOAP_TYPE_ns6__ArrayOfNeighborhood */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ArrayOfNeighborhood() : __sizeNeighborhood(0), Neighborhood(NULL) { }
	virtual ~ns6__ArrayOfNeighborhood() { }
};
#endif

#ifndef SOAP_TYPE_ns7__ArrayOfstring
#define SOAP_TYPE_ns7__ArrayOfstring (135)
/* ns7:ArrayOfstring */
class SOAP_CMAC ns7__ArrayOfstring : public xsd__anyType
{
public:
	int __sizestring;	/* sequence of elements <string> */
	char **string;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 135; } /* = unique id SOAP_TYPE_ns7__ArrayOfstring */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__ArrayOfstring() : __sizestring(0), string(NULL) { }
	virtual ~ns7__ArrayOfstring() { }
};
#endif

#ifndef SOAP_TYPE_ns7__ArrayOfanyType
#define SOAP_TYPE_ns7__ArrayOfanyType (136)
/* ns7:ArrayOfanyType */
class SOAP_CMAC ns7__ArrayOfanyType : public xsd__anyType
{
public:
	int __sizeanyType;	/* sequence of elements <anyType> */
	xsd__anyType **anyType;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 136; } /* = unique id SOAP_TYPE_ns7__ArrayOfanyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__ArrayOfanyType() : __sizeanyType(0), anyType(NULL) { }
	virtual ~ns7__ArrayOfanyType() { }
};
#endif

#ifndef SOAP_TYPE__ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6_KeyValueOfNeighborhoodintkC8b0tr6
#define SOAP_TYPE__ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6_KeyValueOfNeighborhoodintkC8b0tr6 (327)
/* ns7:ArrayOfKeyValueOfNeighborhoodintkC8b0tr6-KeyValueOfNeighborhoodintkC8b0tr6 */
class SOAP_CMAC _ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6_KeyValueOfNeighborhoodintkC8b0tr6
{
public:
	ns6__Neighborhood *Key;	/* optional element of type ns6:Neighborhood */
	int Value;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 327; } /* = unique id SOAP_TYPE__ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6_KeyValueOfNeighborhoodintkC8b0tr6 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6_KeyValueOfNeighborhoodintkC8b0tr6() : Key(NULL), Value(0) { }
	virtual ~_ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6_KeyValueOfNeighborhoodintkC8b0tr6() { }
};
#endif

#ifndef SOAP_TYPE_ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6
#define SOAP_TYPE_ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6 (137)
/* ns7:ArrayOfKeyValueOfNeighborhoodintkC8b0tr6 */
class SOAP_CMAC ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6 : public xsd__anyType
{
public:
	int __sizeKeyValueOfNeighborhoodintkC8b0tr6;	/* sequence of elements <KeyValueOfNeighborhoodintkC8b0tr6> */
	_ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6_KeyValueOfNeighborhoodintkC8b0tr6 *KeyValueOfNeighborhoodintkC8b0tr6;	/* optional element of type ns7:ArrayOfKeyValueOfNeighborhoodintkC8b0tr6-KeyValueOfNeighborhoodintkC8b0tr6 */
public:
	virtual int soap_type() const { return 137; } /* = unique id SOAP_TYPE_ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6() : __sizeKeyValueOfNeighborhoodintkC8b0tr6(0), KeyValueOfNeighborhoodintkC8b0tr6(NULL) { }
	virtual ~ns7__ArrayOfKeyValueOfNeighborhoodintkC8b0tr6() { }
};
#endif

#ifndef SOAP_TYPE__ns7__ArrayOfKeyValueOfstringanyType_KeyValueOfstringanyType
#define SOAP_TYPE__ns7__ArrayOfKeyValueOfstringanyType_KeyValueOfstringanyType (329)
/* ns7:ArrayOfKeyValueOfstringanyType-KeyValueOfstringanyType */
class SOAP_CMAC _ns7__ArrayOfKeyValueOfstringanyType_KeyValueOfstringanyType
{
public:
	char *Key;	/* optional element of type xsd:string */
	xsd__anyType *Value;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 329; } /* = unique id SOAP_TYPE__ns7__ArrayOfKeyValueOfstringanyType_KeyValueOfstringanyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns7__ArrayOfKeyValueOfstringanyType_KeyValueOfstringanyType() : Key(NULL), Value(NULL) { }
	virtual ~_ns7__ArrayOfKeyValueOfstringanyType_KeyValueOfstringanyType() { }
};
#endif

#ifndef SOAP_TYPE_ns7__ArrayOfKeyValueOfstringanyType
#define SOAP_TYPE_ns7__ArrayOfKeyValueOfstringanyType (138)
/* ns7:ArrayOfKeyValueOfstringanyType */
class SOAP_CMAC ns7__ArrayOfKeyValueOfstringanyType : public xsd__anyType
{
public:
	int __sizeKeyValueOfstringanyType;	/* sequence of elements <KeyValueOfstringanyType> */
	_ns7__ArrayOfKeyValueOfstringanyType_KeyValueOfstringanyType *KeyValueOfstringanyType;	/* optional element of type ns7:ArrayOfKeyValueOfstringanyType-KeyValueOfstringanyType */
public:
	virtual int soap_type() const { return 138; } /* = unique id SOAP_TYPE_ns7__ArrayOfKeyValueOfstringanyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__ArrayOfKeyValueOfstringanyType() : __sizeKeyValueOfstringanyType(0), KeyValueOfstringanyType(NULL) { }
	virtual ~ns7__ArrayOfKeyValueOfstringanyType() { }
};
#endif

#ifndef SOAP_TYPE__ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s_KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s
#define SOAP_TYPE__ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s_KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s (331)
/* ns7:ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_P9s-KeyValueOfintCategorySpecificPropertySetn6Q9q_P9s */
class SOAP_CMAC _ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s_KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s
{
public:
	int Key;	/* required element of type xsd:int */
	ns6__CategorySpecificPropertySet *Value;	/* optional element of type ns6:CategorySpecificPropertySet */
public:
	virtual int soap_type() const { return 331; } /* = unique id SOAP_TYPE__ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s_KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s_KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s() : Key(0), Value(NULL) { }
	virtual ~_ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s_KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s() { }
};
#endif

#ifndef SOAP_TYPE_ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s
#define SOAP_TYPE_ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s (139)
/* ns7:ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_P9s */
class SOAP_CMAC ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s : public xsd__anyType
{
public:
	int __sizeKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s;	/* sequence of elements <KeyValueOfintCategorySpecificPropertySetn6Q9q_P9s> */
	_ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s_KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s *KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s;	/* optional element of type ns7:ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_P9s-KeyValueOfintCategorySpecificPropertySetn6Q9q_P9s */
public:
	virtual int soap_type() const { return 139; } /* = unique id SOAP_TYPE_ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s() : __sizeKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s(0), KeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s(NULL) { }
	virtual ~ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s() { }
};
#endif

#ifndef SOAP_TYPE__ns9__Geocode
#define SOAP_TYPE__ns9__Geocode (140)
/* ns9:Geocode */
class SOAP_CMAC _ns9__Geocode
{
public:
	class ns10__GeocodeRequest *request;	/* optional element of type ns10:GeocodeRequest */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 140; } /* = unique id SOAP_TYPE__ns9__Geocode */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns9__Geocode() : request(NULL), soap(NULL) { }
	virtual ~_ns9__Geocode() { }
};
#endif

#ifndef SOAP_TYPE__ns9__GeocodeResponse
#define SOAP_TYPE__ns9__GeocodeResponse (141)
/* ns9:GeocodeResponse */
class SOAP_CMAC _ns9__GeocodeResponse
{
public:
	class ns10__GeocodeResponse *GeocodeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns10:GeocodeResponse */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 141; } /* = unique id SOAP_TYPE__ns9__GeocodeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns9__GeocodeResponse() : GeocodeResult(NULL), soap(NULL) { }
	virtual ~_ns9__GeocodeResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns9__ReverseGeocode
#define SOAP_TYPE__ns9__ReverseGeocode (142)
/* ns9:ReverseGeocode */
class SOAP_CMAC _ns9__ReverseGeocode
{
public:
	class ns10__ReverseGeocodeRequest *request;	/* optional element of type ns10:ReverseGeocodeRequest */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 142; } /* = unique id SOAP_TYPE__ns9__ReverseGeocode */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns9__ReverseGeocode() : request(NULL), soap(NULL) { }
	virtual ~_ns9__ReverseGeocode() { }
};
#endif

#ifndef SOAP_TYPE__ns9__ReverseGeocodeResponse
#define SOAP_TYPE__ns9__ReverseGeocodeResponse (143)
/* ns9:ReverseGeocodeResponse */
class SOAP_CMAC _ns9__ReverseGeocodeResponse
{
public:
	ns10__GeocodeResponse *ReverseGeocodeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns10:GeocodeResponse */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 143; } /* = unique id SOAP_TYPE__ns9__ReverseGeocodeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns9__ReverseGeocodeResponse() : ReverseGeocodeResult(NULL), soap(NULL) { }
	virtual ~_ns9__ReverseGeocodeResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns10__GeocodeOptions
#define SOAP_TYPE_ns10__GeocodeOptions (145)
/* ns10:GeocodeOptions */
class SOAP_CMAC ns10__GeocodeOptions : public xsd__anyType
{
public:
	int *Count;	/* optional element of type xsd:int */
	class ns10__ArrayOfFilterBase *Filters;	/* optional element of type ns10:ArrayOfFilterBase */
public:
	virtual int soap_type() const { return 145; } /* = unique id SOAP_TYPE_ns10__GeocodeOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns10__GeocodeOptions() : Count(NULL), Filters(NULL) { }
	virtual ~ns10__GeocodeOptions() { }
};
#endif

#ifndef SOAP_TYPE_ns10__ArrayOfFilterBase
#define SOAP_TYPE_ns10__ArrayOfFilterBase (146)
/* ns10:ArrayOfFilterBase */
class SOAP_CMAC ns10__ArrayOfFilterBase : public xsd__anyType
{
public:
	int __sizeFilterBase;	/* sequence of elements <FilterBase> */
	class ns10__FilterBase **FilterBase;	/* optional element of type ns10:FilterBase */
public:
	virtual int soap_type() const { return 146; } /* = unique id SOAP_TYPE_ns10__ArrayOfFilterBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns10__ArrayOfFilterBase() : __sizeFilterBase(0), FilterBase(NULL) { }
	virtual ~ns10__ArrayOfFilterBase() { }
};
#endif

#ifndef SOAP_TYPE_ns10__FilterBase
#define SOAP_TYPE_ns10__FilterBase (147)
/* Primitive ns10:FilterBase schema type: */
class SOAP_CMAC ns10__FilterBase : public xsd__anyType
{
public:
	virtual int soap_type() const { return 147; } /* = unique id SOAP_TYPE_ns10__FilterBase */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns10__FilterBase()  { }
	virtual ~ns10__FilterBase() { }
};
#endif

#ifndef SOAP_TYPE__ns12__GetImageryMetadata
#define SOAP_TYPE__ns12__GetImageryMetadata (151)
/* ns12:GetImageryMetadata */
class SOAP_CMAC _ns12__GetImageryMetadata
{
public:
	class ns13__ImageryMetadataRequest *request;	/* optional element of type ns13:ImageryMetadataRequest */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 151; } /* = unique id SOAP_TYPE__ns12__GetImageryMetadata */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns12__GetImageryMetadata() : request(NULL), soap(NULL) { }
	virtual ~_ns12__GetImageryMetadata() { }
};
#endif

#ifndef SOAP_TYPE__ns12__GetImageryMetadataResponse
#define SOAP_TYPE__ns12__GetImageryMetadataResponse (152)
/* ns12:GetImageryMetadataResponse */
class SOAP_CMAC _ns12__GetImageryMetadataResponse
{
public:
	class ns13__ImageryMetadataResponse *GetImageryMetadataResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns13:ImageryMetadataResponse */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 152; } /* = unique id SOAP_TYPE__ns12__GetImageryMetadataResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns12__GetImageryMetadataResponse() : GetImageryMetadataResult(NULL), soap(NULL) { }
	virtual ~_ns12__GetImageryMetadataResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns12__GetMapUri
#define SOAP_TYPE__ns12__GetMapUri (153)
/* ns12:GetMapUri */
class SOAP_CMAC _ns12__GetMapUri
{
public:
	class ns13__MapUriRequest *request;	/* optional element of type ns13:MapUriRequest */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 153; } /* = unique id SOAP_TYPE__ns12__GetMapUri */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns12__GetMapUri() : request(NULL), soap(NULL) { }
	virtual ~_ns12__GetMapUri() { }
};
#endif

#ifndef SOAP_TYPE__ns12__GetMapUriResponse
#define SOAP_TYPE__ns12__GetMapUriResponse (154)
/* ns12:GetMapUriResponse */
class SOAP_CMAC _ns12__GetMapUriResponse
{
public:
	class ns13__MapUriResponse *GetMapUriResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns13:MapUriResponse */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 154; } /* = unique id SOAP_TYPE__ns12__GetMapUriResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns12__GetMapUriResponse() : GetMapUriResult(NULL), soap(NULL) { }
	virtual ~_ns12__GetMapUriResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ImageryMetadataOptions
#define SOAP_TYPE_ns13__ImageryMetadataOptions (156)
/* ns13:ImageryMetadataOptions */
class SOAP_CMAC ns13__ImageryMetadataOptions : public xsd__anyType
{
public:
	ns4__Heading *Heading;	/* optional element of type ns4:Heading */
	ns4__Location *Location;	/* optional element of type ns4:Location */
	bool *ReturnImageryProviders;	/* optional element of type xsd:boolean */
	enum ns4__UriScheme *UriScheme;	/* optional element of type ns4:UriScheme */
	int *ZoomLevel;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 156; } /* = unique id SOAP_TYPE_ns13__ImageryMetadataOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ImageryMetadataOptions() : Heading(NULL), Location(NULL), ReturnImageryProviders(NULL), UriScheme(NULL), ZoomLevel(NULL) { }
	virtual ~ns13__ImageryMetadataOptions() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ArrayOfImageryMetadataResult
#define SOAP_TYPE_ns13__ArrayOfImageryMetadataResult (158)
/* ns13:ArrayOfImageryMetadataResult */
class SOAP_CMAC ns13__ArrayOfImageryMetadataResult : public xsd__anyType
{
public:
	int __sizeImageryMetadataResult;	/* sequence of elements <ImageryMetadataResult> */
	class ns13__ImageryMetadataResult **ImageryMetadataResult;	/* optional element of type ns13:ImageryMetadataResult */
public:
	virtual int soap_type() const { return 158; } /* = unique id SOAP_TYPE_ns13__ArrayOfImageryMetadataResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ArrayOfImageryMetadataResult() : __sizeImageryMetadataResult(0), ImageryMetadataResult(NULL) { }
	virtual ~ns13__ArrayOfImageryMetadataResult() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ImageryMetadataResult
#define SOAP_TYPE_ns13__ImageryMetadataResult (159)
/* ns13:ImageryMetadataResult */
class SOAP_CMAC ns13__ImageryMetadataResult : public xsd__anyType
{
public:
	ns4__SizeOfint *ImageSize;	/* optional element of type ns4:SizeOfint */
	char *ImageUri;	/* optional element of type xsd:string */
	ns7__ArrayOfstring *ImageUriSubdomains;	/* optional element of type ns7:ArrayOfstring */
	class ns13__ArrayOfImageryProvider *ImageryProviders;	/* optional element of type ns13:ArrayOfImageryProvider */
	ns4__RangeOfdateTime *Vintage;	/* optional element of type ns4:RangeOfdateTime */
	ns4__RangeOfint *ZoomRange;	/* optional element of type ns4:RangeOfint */
public:
	virtual int soap_type() const { return 159; } /* = unique id SOAP_TYPE_ns13__ImageryMetadataResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ImageryMetadataResult() : ImageSize(NULL), ImageUri(NULL), ImageUriSubdomains(NULL), ImageryProviders(NULL), Vintage(NULL), ZoomRange(NULL) { }
	virtual ~ns13__ImageryMetadataResult() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ArrayOfImageryProvider
#define SOAP_TYPE_ns13__ArrayOfImageryProvider (160)
/* ns13:ArrayOfImageryProvider */
class SOAP_CMAC ns13__ArrayOfImageryProvider : public xsd__anyType
{
public:
	int __sizeImageryProvider;	/* sequence of elements <ImageryProvider> */
	class ns13__ImageryProvider **ImageryProvider;	/* optional element of type ns13:ImageryProvider */
public:
	virtual int soap_type() const { return 160; } /* = unique id SOAP_TYPE_ns13__ArrayOfImageryProvider */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ArrayOfImageryProvider() : __sizeImageryProvider(0), ImageryProvider(NULL) { }
	virtual ~ns13__ArrayOfImageryProvider() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ImageryProvider
#define SOAP_TYPE_ns13__ImageryProvider (161)
/* ns13:ImageryProvider */
class SOAP_CMAC ns13__ImageryProvider : public xsd__anyType
{
public:
	char *Attribution;	/* optional element of type xsd:string */
	class ns13__ArrayOfCoverageArea *CoverageAreas;	/* optional element of type ns13:ArrayOfCoverageArea */
public:
	virtual int soap_type() const { return 161; } /* = unique id SOAP_TYPE_ns13__ImageryProvider */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ImageryProvider() : Attribution(NULL), CoverageAreas(NULL) { }
	virtual ~ns13__ImageryProvider() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ArrayOfCoverageArea
#define SOAP_TYPE_ns13__ArrayOfCoverageArea (162)
/* ns13:ArrayOfCoverageArea */
class SOAP_CMAC ns13__ArrayOfCoverageArea : public xsd__anyType
{
public:
	int __sizeCoverageArea;	/* sequence of elements <CoverageArea> */
	class ns13__CoverageArea **CoverageArea;	/* optional element of type ns13:CoverageArea */
public:
	virtual int soap_type() const { return 162; } /* = unique id SOAP_TYPE_ns13__ArrayOfCoverageArea */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ArrayOfCoverageArea() : __sizeCoverageArea(0), CoverageArea(NULL) { }
	virtual ~ns13__ArrayOfCoverageArea() { }
};
#endif

#ifndef SOAP_TYPE_ns13__CoverageArea
#define SOAP_TYPE_ns13__CoverageArea (163)
/* ns13:CoverageArea */
class SOAP_CMAC ns13__CoverageArea : public xsd__anyType
{
public:
	ns4__Rectangle *BoundingRectangle;	/* optional element of type ns4:Rectangle */
	ns4__RangeOfint *ZoomRange;	/* optional element of type ns4:RangeOfint */
public:
	virtual int soap_type() const { return 163; } /* = unique id SOAP_TYPE_ns13__CoverageArea */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__CoverageArea() : BoundingRectangle(NULL), ZoomRange(NULL) { }
	virtual ~ns13__CoverageArea() { }
};
#endif

#ifndef SOAP_TYPE_ns13__MapUriOptions
#define SOAP_TYPE_ns13__MapUriOptions (166)
/* ns13:MapUriOptions */
class SOAP_CMAC ns13__MapUriOptions : public xsd__anyType
{
public:
	ns7__ArrayOfstring *DisplayLayers;	/* optional element of type ns7:ArrayOfstring */
	ns4__SizeOfint *ImageSize;	/* optional element of type ns4:SizeOfint */
	enum ns4__ImageType *ImageType;	/* optional element of type ns4:ImageType */
	bool *PreventIconCollision;	/* optional element of type xsd:boolean */
	enum ns4__MapStyle *Style;	/* optional element of type ns4:MapStyle */
	enum ns4__UriScheme *UriScheme;	/* optional element of type ns4:UriScheme */
	int *ZoomLevel;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 166; } /* = unique id SOAP_TYPE_ns13__MapUriOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__MapUriOptions() : DisplayLayers(NULL), ImageSize(NULL), ImageType(NULL), PreventIconCollision(NULL), Style(NULL), UriScheme(NULL), ZoomLevel(NULL) { }
	virtual ~ns13__MapUriOptions() { }
};
#endif

#ifndef SOAP_TYPE__ns15__CalculateRoute
#define SOAP_TYPE__ns15__CalculateRoute (168)
/* ns15:CalculateRoute */
class SOAP_CMAC _ns15__CalculateRoute
{
public:
	class ns16__RouteRequest *request;	/* optional element of type ns16:RouteRequest */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 168; } /* = unique id SOAP_TYPE__ns15__CalculateRoute */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns15__CalculateRoute() : request(NULL), soap(NULL) { }
	virtual ~_ns15__CalculateRoute() { }
};
#endif

#ifndef SOAP_TYPE__ns15__CalculateRouteResponse
#define SOAP_TYPE__ns15__CalculateRouteResponse (169)
/* ns15:CalculateRouteResponse */
class SOAP_CMAC _ns15__CalculateRouteResponse
{
public:
	class ns16__RouteResponse *CalculateRouteResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns16:RouteResponse */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 169; } /* = unique id SOAP_TYPE__ns15__CalculateRouteResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns15__CalculateRouteResponse() : CalculateRouteResult(NULL), soap(NULL) { }
	virtual ~_ns15__CalculateRouteResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns15__CalculateRoutesFromMajorRoads
#define SOAP_TYPE__ns15__CalculateRoutesFromMajorRoads (170)
/* ns15:CalculateRoutesFromMajorRoads */
class SOAP_CMAC _ns15__CalculateRoutesFromMajorRoads
{
public:
	class ns16__MajorRoutesRequest *request;	/* optional element of type ns16:MajorRoutesRequest */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 170; } /* = unique id SOAP_TYPE__ns15__CalculateRoutesFromMajorRoads */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns15__CalculateRoutesFromMajorRoads() : request(NULL), soap(NULL) { }
	virtual ~_ns15__CalculateRoutesFromMajorRoads() { }
};
#endif

#ifndef SOAP_TYPE__ns15__CalculateRoutesFromMajorRoadsResponse
#define SOAP_TYPE__ns15__CalculateRoutesFromMajorRoadsResponse (171)
/* ns15:CalculateRoutesFromMajorRoadsResponse */
class SOAP_CMAC _ns15__CalculateRoutesFromMajorRoadsResponse
{
public:
	class ns16__MajorRoutesResponse *CalculateRoutesFromMajorRoadsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns16:MajorRoutesResponse */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 171; } /* = unique id SOAP_TYPE__ns15__CalculateRoutesFromMajorRoadsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns15__CalculateRoutesFromMajorRoadsResponse() : CalculateRoutesFromMajorRoadsResult(NULL), soap(NULL) { }
	virtual ~_ns15__CalculateRoutesFromMajorRoadsResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RouteOptions
#define SOAP_TYPE_ns16__RouteOptions (173)
/* ns16:RouteOptions */
class SOAP_CMAC ns16__RouteOptions : public xsd__anyType
{
public:
	enum ns16__TravelMode *Mode;	/* optional element of type ns16:TravelMode */
	enum ns16__RouteOptimization *Optimization;	/* optional element of type ns16:RouteOptimization */
	enum ns16__RoutePathType *RoutePathType;	/* optional element of type ns16:RoutePathType */
	enum ns16__TrafficUsage *TrafficUsage;	/* optional element of type ns16:TrafficUsage */
public:
	virtual int soap_type() const { return 173; } /* = unique id SOAP_TYPE_ns16__RouteOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RouteOptions() : Mode(NULL), Optimization(NULL), RoutePathType(NULL), TrafficUsage(NULL) { }
	virtual ~ns16__RouteOptions() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ArrayOfWaypoint
#define SOAP_TYPE_ns16__ArrayOfWaypoint (174)
/* ns16:ArrayOfWaypoint */
class SOAP_CMAC ns16__ArrayOfWaypoint : public xsd__anyType
{
public:
	int __sizeWaypoint;	/* sequence of elements <Waypoint> */
	class ns16__Waypoint **Waypoint;	/* optional element of type ns16:Waypoint */
public:
	virtual int soap_type() const { return 174; } /* = unique id SOAP_TYPE_ns16__ArrayOfWaypoint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ArrayOfWaypoint() : __sizeWaypoint(0), Waypoint(NULL) { }
	virtual ~ns16__ArrayOfWaypoint() { }
};
#endif

#ifndef SOAP_TYPE_ns16__Waypoint
#define SOAP_TYPE_ns16__Waypoint (175)
/* ns16:Waypoint */
class SOAP_CMAC ns16__Waypoint : public xsd__anyType
{
public:
	char *Description;	/* optional element of type xsd:string */
	ns4__Location *Location;	/* optional element of type ns4:Location */
public:
	virtual int soap_type() const { return 175; } /* = unique id SOAP_TYPE_ns16__Waypoint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__Waypoint() : Description(NULL), Location(NULL) { }
	virtual ~ns16__Waypoint() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RouteResult
#define SOAP_TYPE_ns16__RouteResult (177)
/* ns16:RouteResult */
class SOAP_CMAC ns16__RouteResult : public xsd__anyType
{
public:
	class ns16__ArrayOfRouteLeg *Legs;	/* optional element of type ns16:ArrayOfRouteLeg */
	class ns16__RoutePath *RoutePath;	/* optional element of type ns16:RoutePath */
	class ns16__RouteSummary *Summary;	/* optional element of type ns16:RouteSummary */
public:
	virtual int soap_type() const { return 177; } /* = unique id SOAP_TYPE_ns16__RouteResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RouteResult() : Legs(NULL), RoutePath(NULL), Summary(NULL) { }
	virtual ~ns16__RouteResult() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ArrayOfRouteLeg
#define SOAP_TYPE_ns16__ArrayOfRouteLeg (178)
/* ns16:ArrayOfRouteLeg */
class SOAP_CMAC ns16__ArrayOfRouteLeg : public xsd__anyType
{
public:
	int __sizeRouteLeg;	/* sequence of elements <RouteLeg> */
	class ns16__RouteLeg **RouteLeg;	/* optional element of type ns16:RouteLeg */
public:
	virtual int soap_type() const { return 178; } /* = unique id SOAP_TYPE_ns16__ArrayOfRouteLeg */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ArrayOfRouteLeg() : __sizeRouteLeg(0), RouteLeg(NULL) { }
	virtual ~ns16__ArrayOfRouteLeg() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RouteLeg
#define SOAP_TYPE_ns16__RouteLeg (179)
/* ns16:RouteLeg */
class SOAP_CMAC ns16__RouteLeg : public xsd__anyType
{
public:
	ns4__Location *ActualEnd;	/* optional element of type ns4:Location */
	ns4__Location *ActualStart;	/* optional element of type ns4:Location */
	class ns16__ArrayOfItineraryItem *Itinerary;	/* optional element of type ns16:ArrayOfItineraryItem */
	ns16__RouteSummary *Summary;	/* optional element of type ns16:RouteSummary */
public:
	virtual int soap_type() const { return 179; } /* = unique id SOAP_TYPE_ns16__RouteLeg */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RouteLeg() : ActualEnd(NULL), ActualStart(NULL), Itinerary(NULL), Summary(NULL) { }
	virtual ~ns16__RouteLeg() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ArrayOfItineraryItem
#define SOAP_TYPE_ns16__ArrayOfItineraryItem (180)
/* ns16:ArrayOfItineraryItem */
class SOAP_CMAC ns16__ArrayOfItineraryItem : public xsd__anyType
{
public:
	int __sizeItineraryItem;	/* sequence of elements <ItineraryItem> */
	class ns16__ItineraryItem **ItineraryItem;	/* optional element of type ns16:ItineraryItem */
public:
	virtual int soap_type() const { return 180; } /* = unique id SOAP_TYPE_ns16__ArrayOfItineraryItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ArrayOfItineraryItem() : __sizeItineraryItem(0), ItineraryItem(NULL) { }
	virtual ~ns16__ArrayOfItineraryItem() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryItem
#define SOAP_TYPE_ns16__ItineraryItem (181)
/* ns16:ItineraryItem */
class SOAP_CMAC ns16__ItineraryItem : public xsd__anyType
{
public:
	char *CompassDirection;	/* optional element of type xsd:string */
	class ns16__ArrayOfItineraryItemHint *Hints;	/* optional element of type ns16:ArrayOfItineraryItemHint */
	ns4__Location *Location;	/* optional element of type ns4:Location */
	enum ns16__ManeuverType *ManeuverType;	/* optional element of type ns16:ManeuverType */
	ns16__RouteSummary *Summary;	/* optional element of type ns16:RouteSummary */
	char *Text;	/* optional element of type xsd:string */
	class ns16__ArrayOfItineraryItemWarning *Warnings;	/* optional element of type ns16:ArrayOfItineraryItemWarning */
public:
	virtual int soap_type() const { return 181; } /* = unique id SOAP_TYPE_ns16__ItineraryItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ItineraryItem() : CompassDirection(NULL), Hints(NULL), Location(NULL), ManeuverType(NULL), Summary(NULL), Text(NULL), Warnings(NULL) { }
	virtual ~ns16__ItineraryItem() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ArrayOfItineraryItemHint
#define SOAP_TYPE_ns16__ArrayOfItineraryItemHint (182)
/* ns16:ArrayOfItineraryItemHint */
class SOAP_CMAC ns16__ArrayOfItineraryItemHint : public xsd__anyType
{
public:
	int __sizeItineraryItemHint;	/* sequence of elements <ItineraryItemHint> */
	class ns16__ItineraryItemHint **ItineraryItemHint;	/* optional element of type ns16:ItineraryItemHint */
public:
	virtual int soap_type() const { return 182; } /* = unique id SOAP_TYPE_ns16__ArrayOfItineraryItemHint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ArrayOfItineraryItemHint() : __sizeItineraryItemHint(0), ItineraryItemHint(NULL) { }
	virtual ~ns16__ArrayOfItineraryItemHint() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryItemHint
#define SOAP_TYPE_ns16__ItineraryItemHint (183)
/* ns16:ItineraryItemHint */
class SOAP_CMAC ns16__ItineraryItemHint : public xsd__anyType
{
public:
	enum ns16__ItineraryItemHintType *HintType;	/* optional element of type ns16:ItineraryItemHintType */
	char *Text;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 183; } /* = unique id SOAP_TYPE_ns16__ItineraryItemHint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ItineraryItemHint() : HintType(NULL), Text(NULL) { }
	virtual ~ns16__ItineraryItemHint() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RouteSummary
#define SOAP_TYPE_ns16__RouteSummary (184)
/* ns16:RouteSummary */
class SOAP_CMAC ns16__RouteSummary : public xsd__anyType
{
public:
	ns4__Rectangle *BoundingRectangle;	/* optional element of type ns4:Rectangle */
	double *Distance;	/* optional element of type xsd:double */
	LONG64 *TimeInSeconds;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 184; } /* = unique id SOAP_TYPE_ns16__RouteSummary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RouteSummary() : BoundingRectangle(NULL), Distance(NULL), TimeInSeconds(NULL) { }
	virtual ~ns16__RouteSummary() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ArrayOfItineraryItemWarning
#define SOAP_TYPE_ns16__ArrayOfItineraryItemWarning (185)
/* ns16:ArrayOfItineraryItemWarning */
class SOAP_CMAC ns16__ArrayOfItineraryItemWarning : public xsd__anyType
{
public:
	int __sizeItineraryItemWarning;	/* sequence of elements <ItineraryItemWarning> */
	class ns16__ItineraryItemWarning **ItineraryItemWarning;	/* optional element of type ns16:ItineraryItemWarning */
public:
	virtual int soap_type() const { return 185; } /* = unique id SOAP_TYPE_ns16__ArrayOfItineraryItemWarning */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ArrayOfItineraryItemWarning() : __sizeItineraryItemWarning(0), ItineraryItemWarning(NULL) { }
	virtual ~ns16__ArrayOfItineraryItemWarning() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ItineraryItemWarning
#define SOAP_TYPE_ns16__ItineraryItemWarning (186)
/* ns16:ItineraryItemWarning */
class SOAP_CMAC ns16__ItineraryItemWarning : public xsd__anyType
{
public:
	enum ns16__ItineraryWarningSeverity *Severity;	/* optional element of type ns16:ItineraryWarningSeverity */
	char *Text;	/* optional element of type xsd:string */
	enum ns16__ItineraryWarningType *WarningType;	/* optional element of type ns16:ItineraryWarningType */
public:
	virtual int soap_type() const { return 186; } /* = unique id SOAP_TYPE_ns16__ItineraryItemWarning */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ItineraryItemWarning() : Severity(NULL), Text(NULL), WarningType(NULL) { }
	virtual ~ns16__ItineraryItemWarning() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RoutePath
#define SOAP_TYPE_ns16__RoutePath (187)
/* ns16:RoutePath */
class SOAP_CMAC ns16__RoutePath : public xsd__anyType
{
public:
	ns4__ArrayOfLocation *Points;	/* optional element of type ns4:ArrayOfLocation */
public:
	virtual int soap_type() const { return 187; } /* = unique id SOAP_TYPE_ns16__RoutePath */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RoutePath() : Points(NULL) { }
	virtual ~ns16__RoutePath() { }
};
#endif

#ifndef SOAP_TYPE_ns16__ArrayOfRouteResult
#define SOAP_TYPE_ns16__ArrayOfRouteResult (191)
/* ns16:ArrayOfRouteResult */
class SOAP_CMAC ns16__ArrayOfRouteResult : public xsd__anyType
{
public:
	int __sizeRouteResult;	/* sequence of elements <RouteResult> */
	ns16__RouteResult **RouteResult;	/* optional element of type ns16:RouteResult */
public:
	virtual int soap_type() const { return 191; } /* = unique id SOAP_TYPE_ns16__ArrayOfRouteResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__ArrayOfRouteResult() : __sizeRouteResult(0), RouteResult(NULL) { }
	virtual ~ns16__ArrayOfRouteResult() { }
};
#endif

#ifndef SOAP_TYPE_ns4__UserLocation
#define SOAP_TYPE_ns4__UserLocation (83)
/* ns4:UserLocation */
class SOAP_CMAC ns4__UserLocation : public ns4__Location
{
public:
	enum ns4__Confidence *Confidence;	/* optional element of type ns4:Confidence */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE_ns4__UserLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__UserLocation() : Confidence(NULL) { }
	virtual ~ns4__UserLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns4__GeocodeLocation
#define SOAP_TYPE_ns4__GeocodeLocation (85)
/* ns4:GeocodeLocation */
class SOAP_CMAC ns4__GeocodeLocation : public ns4__Location
{
public:
	char *CalculationMethod;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE_ns4__GeocodeLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__GeocodeLocation() : CalculationMethod(NULL) { }
	virtual ~ns4__GeocodeLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Rectangle
#define SOAP_TYPE_ns4__Rectangle (87)
/* ns4:Rectangle */
class SOAP_CMAC ns4__Rectangle : public ns4__ShapeBase
{
public:
	ns4__Location *Northeast;	/* optional element of type ns4:Location */
	ns4__Location *Southwest;	/* optional element of type ns4:Location */
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE_ns4__Rectangle */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Rectangle() : Northeast(NULL), Southwest(NULL) { }
	virtual ~ns4__Rectangle() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Circle
#define SOAP_TYPE_ns4__Circle (88)
/* ns4:Circle */
class SOAP_CMAC ns4__Circle : public ns4__ShapeBase
{
public:
	ns4__Location *Center;	/* optional element of type ns4:Location */
	enum ns4__DistanceUnit *DistanceUnit;	/* optional element of type ns4:DistanceUnit */
	double *Radius;	/* optional element of type xsd:double */
public:
	virtual int soap_type() const { return 88; } /* = unique id SOAP_TYPE_ns4__Circle */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Circle() : Center(NULL), DistanceUnit(NULL), Radius(NULL) { }
	virtual ~ns4__Circle() { }
};
#endif

#ifndef SOAP_TYPE_ns4__Polygon
#define SOAP_TYPE_ns4__Polygon (89)
/* ns4:Polygon */
class SOAP_CMAC ns4__Polygon : public ns4__ShapeBase
{
public:
	ns4__ArrayOfLocation *Vertices;	/* optional element of type ns4:ArrayOfLocation */
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE_ns4__Polygon */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__Polygon() : Vertices(NULL) { }
	virtual ~ns4__Polygon() { }
};
#endif

#ifndef SOAP_TYPE_ns4__FilterExpression
#define SOAP_TYPE_ns4__FilterExpression (93)
/* ns4:FilterExpression */
class SOAP_CMAC ns4__FilterExpression : public ns4__FilterExpressionBase
{
public:
	enum ns4__CompareOperator *CompareOperator;	/* optional element of type ns4:CompareOperator */
	xsd__anyType *FilterValue;	/* optional element of type xsd:anyType */
	int *PropertyId;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE_ns4__FilterExpression */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__FilterExpression() : CompareOperator(NULL), FilterValue(NULL), PropertyId(NULL) { }
	virtual ~ns4__FilterExpression() { }
};
#endif

#ifndef SOAP_TYPE_ns4__FilterExpressionClause
#define SOAP_TYPE_ns4__FilterExpressionClause (94)
/* ns4:FilterExpressionClause */
class SOAP_CMAC ns4__FilterExpressionClause : public ns4__FilterExpressionBase
{
public:
	ns4__ArrayOfFilterExpressionBase *Expressions;	/* optional element of type ns4:ArrayOfFilterExpressionBase */
	enum ns4__LogicalOperator *LogicalOperator;	/* optional element of type ns4:LogicalOperator */
public:
	virtual int soap_type() const { return 94; } /* = unique id SOAP_TYPE_ns4__FilterExpressionClause */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns4__FilterExpressionClause() : Expressions(NULL), LogicalOperator(NULL) { }
	virtual ~ns4__FilterExpressionClause() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SearchRequest
#define SOAP_TYPE_ns6__SearchRequest (106)
/* ns6:SearchRequest */
class SOAP_CMAC ns6__SearchRequest : public ns4__RequestBase
{
public:
	char *Query;	/* optional element of type xsd:string */
	ns6__SearchOptions *SearchOptions;	/* optional element of type ns6:SearchOptions */
	ns6__StructuredSearchQuery *StructuredQuery;	/* optional element of type ns6:StructuredSearchQuery */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE_ns6__SearchRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SearchRequest() : Query(NULL), SearchOptions(NULL), StructuredQuery(NULL) { }
	virtual ~ns6__SearchRequest() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SearchResponse
#define SOAP_TYPE_ns6__SearchResponse (109)
/* ns6:SearchResponse */
class SOAP_CMAC ns6__SearchResponse : public ns4__ResponseBase
{
public:
	ns6__QuerySuggestion *QuerySuggestion;	/* optional element of type ns6:QuerySuggestion */
	ns6__ArrayOfSearchResultSet *ResultSets;	/* optional element of type ns6:ArrayOfSearchResultSet */
public:
	virtual int soap_type() const { return 109; } /* = unique id SOAP_TYPE_ns6__SearchResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SearchResponse() : QuerySuggestion(NULL), ResultSets(NULL) { }
	virtual ~ns6__SearchResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns6__RangeFilter
#define SOAP_TYPE_ns6__RangeFilter (117)
/* ns6:RangeFilter */
class SOAP_CMAC ns6__RangeFilter : public ns6__AvailableFilter
{
public:
	xsd__anyType *MaximumValue;	/* optional element of type xsd:anyType */
	xsd__anyType *MinimumValue;	/* optional element of type xsd:anyType */
public:
	virtual int soap_type() const { return 117; } /* = unique id SOAP_TYPE_ns6__RangeFilter */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__RangeFilter() : MaximumValue(NULL), MinimumValue(NULL) { }
	virtual ~ns6__RangeFilter() { }
};
#endif

#ifndef SOAP_TYPE_ns6__ValueListFilter
#define SOAP_TYPE_ns6__ValueListFilter (118)
/* ns6:ValueListFilter */
class SOAP_CMAC ns6__ValueListFilter : public ns6__AvailableFilter
{
public:
	ns7__ArrayOfanyType *Values;	/* optional element of type ns7:ArrayOfanyType */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE_ns6__ValueListFilter */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__ValueListFilter() : Values(NULL) { }
	virtual ~ns6__ValueListFilter() { }
};
#endif

#ifndef SOAP_TYPE_ns6__CommunityContentSearchResult
#define SOAP_TYPE_ns6__CommunityContentSearchResult (128)
/* ns6:CommunityContentSearchResult */
class SOAP_CMAC ns6__CommunityContentSearchResult : public ns6__SearchResultBase
{
public:
	ns7__ArrayOfKeyValueOfstringanyType *AdditionalProperties;	/* optional element of type ns7:ArrayOfKeyValueOfstringanyType */
	char *Description;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 128; } /* = unique id SOAP_TYPE_ns6__CommunityContentSearchResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__CommunityContentSearchResult() : AdditionalProperties(NULL), Description(NULL) { }
	virtual ~ns6__CommunityContentSearchResult() { }
};
#endif

#ifndef SOAP_TYPE_ns6__BusinessSearchResult
#define SOAP_TYPE_ns6__BusinessSearchResult (129)
/* ns6:BusinessSearchResult */
class SOAP_CMAC ns6__BusinessSearchResult : public ns6__SearchResultBase
{
public:
	ns7__ArrayOfKeyValueOfstringanyType *AdditionalProperties;	/* optional element of type ns7:ArrayOfKeyValueOfstringanyType */
	ns4__Address *Address;	/* optional element of type ns4:Address */
	ns6__ArrayOfCategory *Categories;	/* optional element of type ns6:ArrayOfCategory */
	ns7__ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_USCOREP9s *CategorySpecificProperties;	/* optional element of type ns7:ArrayOfKeyValueOfintCategorySpecificPropertySetn6Q9q_P9s */
	ns6__ArrayOfNeighborhood *Neighborhoods;	/* optional element of type ns6:ArrayOfNeighborhood */
	char *PhoneNumber;	/* optional element of type xsd:string */
	int *RatingCount;	/* optional element of type xsd:int */
	int *ReviewCount;	/* optional element of type xsd:int */
	double *UserRating;	/* optional element of type xsd:double */
	char *Website;	/* optional element of type xsd:anyURI */
public:
	virtual int soap_type() const { return 129; } /* = unique id SOAP_TYPE_ns6__BusinessSearchResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__BusinessSearchResult() : AdditionalProperties(NULL), Address(NULL), Categories(NULL), CategorySpecificProperties(NULL), Neighborhoods(NULL), PhoneNumber(NULL), RatingCount(NULL), ReviewCount(NULL), UserRating(NULL), Website(NULL) { }
	virtual ~ns6__BusinessSearchResult() { }
};
#endif

#ifndef SOAP_TYPE_ns6__PersonSearchResult
#define SOAP_TYPE_ns6__PersonSearchResult (133)
/* ns6:PersonSearchResult */
class SOAP_CMAC ns6__PersonSearchResult : public ns6__SearchResultBase
{
public:
	ns4__Address *Address;	/* optional element of type ns4:Address */
	char *PhoneNumber;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 133; } /* = unique id SOAP_TYPE_ns6__PersonSearchResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__PersonSearchResult() : Address(NULL), PhoneNumber(NULL) { }
	virtual ~ns6__PersonSearchResult() { }
};
#endif

#ifndef SOAP_TYPE_ns6__SearchPoint
#define SOAP_TYPE_ns6__SearchPoint (134)
/* ns6:SearchPoint */
class SOAP_CMAC ns6__SearchPoint : public ns4__ShapeBase
{
public:
	ns4__Location *Point;	/* optional element of type ns4:Location */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE_ns6__SearchPoint */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns6__SearchPoint() : Point(NULL) { }
	virtual ~ns6__SearchPoint() { }
};
#endif

#ifndef SOAP_TYPE_ns10__GeocodeRequest
#define SOAP_TYPE_ns10__GeocodeRequest (144)
/* ns10:GeocodeRequest */
class SOAP_CMAC ns10__GeocodeRequest : public ns4__RequestBase
{
public:
	ns4__Address *Address;	/* optional element of type ns4:Address */
	ns10__GeocodeOptions *Options;	/* optional element of type ns10:GeocodeOptions */
	char *Query;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 144; } /* = unique id SOAP_TYPE_ns10__GeocodeRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns10__GeocodeRequest() : Address(NULL), Options(NULL), Query(NULL) { }
	virtual ~ns10__GeocodeRequest() { }
};
#endif

#ifndef SOAP_TYPE_ns10__ConfidenceFilter
#define SOAP_TYPE_ns10__ConfidenceFilter (148)
/* ns10:ConfidenceFilter */
class SOAP_CMAC ns10__ConfidenceFilter : public ns10__FilterBase
{
public:
	enum ns4__Confidence *MinimumConfidence;	/* optional element of type ns4:Confidence */
public:
	virtual int soap_type() const { return 148; } /* = unique id SOAP_TYPE_ns10__ConfidenceFilter */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns10__ConfidenceFilter() : MinimumConfidence(NULL) { }
	virtual ~ns10__ConfidenceFilter() { }
};
#endif

#ifndef SOAP_TYPE_ns10__GeocodeResponse
#define SOAP_TYPE_ns10__GeocodeResponse (149)
/* ns10:GeocodeResponse */
class SOAP_CMAC ns10__GeocodeResponse : public ns4__ResponseBase
{
public:
	ns4__ArrayOfGeocodeResult *Results;	/* optional element of type ns4:ArrayOfGeocodeResult */
public:
	virtual int soap_type() const { return 149; } /* = unique id SOAP_TYPE_ns10__GeocodeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns10__GeocodeResponse() : Results(NULL) { }
	virtual ~ns10__GeocodeResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns10__ReverseGeocodeRequest
#define SOAP_TYPE_ns10__ReverseGeocodeRequest (150)
/* ns10:ReverseGeocodeRequest */
class SOAP_CMAC ns10__ReverseGeocodeRequest : public ns4__RequestBase
{
public:
	ns4__Location *Location;	/* optional element of type ns4:Location */
public:
	virtual int soap_type() const { return 150; } /* = unique id SOAP_TYPE_ns10__ReverseGeocodeRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns10__ReverseGeocodeRequest() : Location(NULL) { }
	virtual ~ns10__ReverseGeocodeRequest() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ImageryMetadataRequest
#define SOAP_TYPE_ns13__ImageryMetadataRequest (155)
/* ns13:ImageryMetadataRequest */
class SOAP_CMAC ns13__ImageryMetadataRequest : public ns4__RequestBase
{
public:
	ns13__ImageryMetadataOptions *Options;	/* optional element of type ns13:ImageryMetadataOptions */
	enum ns4__MapStyle *Style;	/* optional element of type ns4:MapStyle */
public:
	virtual int soap_type() const { return 155; } /* = unique id SOAP_TYPE_ns13__ImageryMetadataRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ImageryMetadataRequest() : Options(NULL), Style(NULL) { }
	virtual ~ns13__ImageryMetadataRequest() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ImageryMetadataResponse
#define SOAP_TYPE_ns13__ImageryMetadataResponse (157)
/* ns13:ImageryMetadataResponse */
class SOAP_CMAC ns13__ImageryMetadataResponse : public ns4__ResponseBase
{
public:
	ns13__ArrayOfImageryMetadataResult *Results;	/* optional element of type ns13:ArrayOfImageryMetadataResult */
public:
	virtual int soap_type() const { return 157; } /* = unique id SOAP_TYPE_ns13__ImageryMetadataResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ImageryMetadataResponse() : Results(NULL) { }
	virtual ~ns13__ImageryMetadataResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns13__ImageryMetadataBirdseyeResult
#define SOAP_TYPE_ns13__ImageryMetadataBirdseyeResult (164)
/* ns13:ImageryMetadataBirdseyeResult */
class SOAP_CMAC ns13__ImageryMetadataBirdseyeResult : public ns13__ImageryMetadataResult
{
public:
	ns4__Heading *Heading;	/* optional element of type ns4:Heading */
	int *TilesX;	/* optional element of type xsd:int */
	int *TilesY;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 164; } /* = unique id SOAP_TYPE_ns13__ImageryMetadataBirdseyeResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__ImageryMetadataBirdseyeResult() : Heading(NULL), TilesX(NULL), TilesY(NULL) { }
	virtual ~ns13__ImageryMetadataBirdseyeResult() { }
};
#endif

#ifndef SOAP_TYPE_ns13__MapUriRequest
#define SOAP_TYPE_ns13__MapUriRequest (165)
/* ns13:MapUriRequest */
class SOAP_CMAC ns13__MapUriRequest : public ns4__RequestBase
{
public:
	ns4__Location *Center;	/* optional element of type ns4:Location */
	ns4__Location *MajorRoutesDestination;	/* optional element of type ns4:Location */
	ns13__MapUriOptions *Options;	/* optional element of type ns13:MapUriOptions */
	ns4__ArrayOfPushpin *Pushpins;	/* optional element of type ns4:ArrayOfPushpin */
public:
	virtual int soap_type() const { return 165; } /* = unique id SOAP_TYPE_ns13__MapUriRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__MapUriRequest() : Center(NULL), MajorRoutesDestination(NULL), Options(NULL), Pushpins(NULL) { }
	virtual ~ns13__MapUriRequest() { }
};
#endif

#ifndef SOAP_TYPE_ns13__MapUriResponse
#define SOAP_TYPE_ns13__MapUriResponse (167)
/* ns13:MapUriResponse */
class SOAP_CMAC ns13__MapUriResponse : public ns4__ResponseBase
{
public:
	char *Uri;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 167; } /* = unique id SOAP_TYPE_ns13__MapUriResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns13__MapUriResponse() : Uri(NULL) { }
	virtual ~ns13__MapUriResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RouteRequest
#define SOAP_TYPE_ns16__RouteRequest (172)
/* ns16:RouteRequest */
class SOAP_CMAC ns16__RouteRequest : public ns4__RequestBase
{
public:
	ns16__RouteOptions *Options;	/* optional element of type ns16:RouteOptions */
	ns16__ArrayOfWaypoint *Waypoints;	/* optional element of type ns16:ArrayOfWaypoint */
public:
	virtual int soap_type() const { return 172; } /* = unique id SOAP_TYPE_ns16__RouteRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RouteRequest() : Options(NULL), Waypoints(NULL) { }
	virtual ~ns16__RouteRequest() { }
};
#endif

#ifndef SOAP_TYPE_ns16__RouteResponse
#define SOAP_TYPE_ns16__RouteResponse (176)
/* ns16:RouteResponse */
class SOAP_CMAC ns16__RouteResponse : public ns4__ResponseBase
{
public:
	ns16__RouteResult *Result;	/* optional element of type ns16:RouteResult */
public:
	virtual int soap_type() const { return 176; } /* = unique id SOAP_TYPE_ns16__RouteResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__RouteResponse() : Result(NULL) { }
	virtual ~ns16__RouteResponse() { }
};
#endif

#ifndef SOAP_TYPE_ns16__MajorRoutesRequest
#define SOAP_TYPE_ns16__MajorRoutesRequest (188)
/* ns16:MajorRoutesRequest */
class SOAP_CMAC ns16__MajorRoutesRequest : public ns4__RequestBase
{
public:
	ns16__Waypoint *Destination;	/* optional element of type ns16:Waypoint */
	class ns16__MajorRoutesOptions *Options;	/* optional element of type ns16:MajorRoutesOptions */
public:
	virtual int soap_type() const { return 188; } /* = unique id SOAP_TYPE_ns16__MajorRoutesRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__MajorRoutesRequest() : Destination(NULL), Options(NULL) { }
	virtual ~ns16__MajorRoutesRequest() { }
};
#endif

#ifndef SOAP_TYPE_ns16__MajorRoutesOptions
#define SOAP_TYPE_ns16__MajorRoutesOptions (189)
/* ns16:MajorRoutesOptions */
class SOAP_CMAC ns16__MajorRoutesOptions : public ns16__RouteOptions
{
public:
	bool *ReturnRoutes;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 189; } /* = unique id SOAP_TYPE_ns16__MajorRoutesOptions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__MajorRoutesOptions() : ReturnRoutes(NULL) { }
	virtual ~ns16__MajorRoutesOptions() { }
};
#endif

#ifndef SOAP_TYPE_ns16__MajorRoutesResponse
#define SOAP_TYPE_ns16__MajorRoutesResponse (190)
/* ns16:MajorRoutesResponse */
class SOAP_CMAC ns16__MajorRoutesResponse : public ns4__ResponseBase
{
public:
	ns16__ArrayOfRouteResult *Routes;	/* optional element of type ns16:ArrayOfRouteResult */
	ns16__ArrayOfWaypoint *StartingPoints;	/* optional element of type ns16:ArrayOfWaypoint */
public:
	virtual int soap_type() const { return 190; } /* = unique id SOAP_TYPE_ns16__MajorRoutesResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns16__MajorRoutesResponse() : Routes(NULL), StartingPoints(NULL) { }
	virtual ~ns16__MajorRoutesResponse() { }
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (409)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	ns1__CustomerInfoHeader *ns1__CustomerInfoHeader_;	/* mustUnderstand */
	ns1__UserInfoHeader *ns1__UserInfoHeader_;	/* mustUnderstand */
};
#endif

#ifndef SOAP_TYPE___ns1__GetVersionInfo
#define SOAP_TYPE___ns1__GetVersionInfo (415)
/* Operation wrapper: */
struct __ns1__GetVersionInfo
{
public:
	_ns1__GetVersionInfo *ns1__GetVersionInfo;	/* optional element of type ns1:GetVersionInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetCountryRegionInfo
#define SOAP_TYPE___ns1__GetCountryRegionInfo (419)
/* Operation wrapper: */
struct __ns1__GetCountryRegionInfo
{
public:
	_ns1__GetCountryRegionInfo *ns1__GetCountryRegionInfo;	/* optional element of type ns1:GetCountryRegionInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetEntityTypes
#define SOAP_TYPE___ns1__GetEntityTypes (423)
/* Operation wrapper: */
struct __ns1__GetEntityTypes
{
public:
	_ns1__GetEntityTypes *ns1__GetEntityTypes;	/* optional element of type ns1:GetEntityTypes */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDataSourceInfo
#define SOAP_TYPE___ns1__GetDataSourceInfo (427)
/* Operation wrapper: */
struct __ns1__GetDataSourceInfo
{
public:
	_ns1__GetDataSourceInfo *ns1__GetDataSourceInfo;	/* optional element of type ns1:GetDataSourceInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetGreatCircleDistances
#define SOAP_TYPE___ns1__GetGreatCircleDistances (431)
/* Operation wrapper: */
struct __ns1__GetGreatCircleDistances
{
public:
	_ns1__GetGreatCircleDistances *ns1__GetGreatCircleDistances;	/* optional element of type ns1:GetGreatCircleDistances */
};
#endif

#ifndef SOAP_TYPE___ns1__GetClientToken
#define SOAP_TYPE___ns1__GetClientToken (435)
/* Operation wrapper: */
struct __ns1__GetClientToken
{
public:
	_ns1__GetClientToken *ns1__GetClientToken;	/* optional element of type ns1:GetClientToken */
};
#endif

#ifndef SOAP_TYPE___ns10__Geocode
#define SOAP_TYPE___ns10__Geocode (439)
/* Operation wrapper: */
struct __ns10__Geocode
{
public:
	_ns9__Geocode *ns9__Geocode;	/* optional element of type ns9:Geocode */
};
#endif

#ifndef SOAP_TYPE___ns10__ReverseGeocode
#define SOAP_TYPE___ns10__ReverseGeocode (443)
/* Operation wrapper: */
struct __ns10__ReverseGeocode
{
public:
	_ns9__ReverseGeocode *ns9__ReverseGeocode;	/* optional element of type ns9:ReverseGeocode */
};
#endif

#ifndef SOAP_TYPE___ns13__GetImageryMetadata
#define SOAP_TYPE___ns13__GetImageryMetadata (447)
/* Operation wrapper: */
struct __ns13__GetImageryMetadata
{
public:
	_ns12__GetImageryMetadata *ns12__GetImageryMetadata;	/* optional element of type ns12:GetImageryMetadata */
};
#endif

#ifndef SOAP_TYPE___ns13__GetMapUri
#define SOAP_TYPE___ns13__GetMapUri (451)
/* Operation wrapper: */
struct __ns13__GetMapUri
{
public:
	_ns12__GetMapUri *ns12__GetMapUri;	/* optional element of type ns12:GetMapUri */
};
#endif

#ifndef SOAP_TYPE___ns16__CalculateRoute
#define SOAP_TYPE___ns16__CalculateRoute (455)
/* Operation wrapper: */
struct __ns16__CalculateRoute
{
public:
	_ns15__CalculateRoute *ns15__CalculateRoute;	/* optional element of type ns15:CalculateRoute */
};
#endif

#ifndef SOAP_TYPE___ns16__CalculateRoutesFromMajorRoads
#define SOAP_TYPE___ns16__CalculateRoutesFromMajorRoads (459)
/* Operation wrapper: */
struct __ns16__CalculateRoutesFromMajorRoads
{
public:
	_ns15__CalculateRoutesFromMajorRoads *ns15__CalculateRoutesFromMajorRoads;	/* optional element of type ns15:CalculateRoutesFromMajorRoads */
};
#endif

#ifndef SOAP_TYPE___ns6__Search
#define SOAP_TYPE___ns6__Search (463)
/* Operation wrapper: */
struct __ns6__Search
{
public:
	_ns3__Search *ns3__Search;	/* optional element of type ns3:Search */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (464)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (466)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (469)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (470)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (10)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (19)
typedef char xsd__byte;
#endif

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (23)
typedef char *xsd__decimal;
#endif

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (27)
typedef char *xsd__duration;
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (37)
typedef unsigned char xsd__unsignedByte;
#endif

#ifndef SOAP_TYPE_ns5__char
#define SOAP_TYPE_ns5__char (216)
typedef int ns5__char;
#endif

#ifndef SOAP_TYPE_ns5__duration
#define SOAP_TYPE_ns5__duration (218)
typedef char *ns5__duration;
#endif

#ifndef SOAP_TYPE_ns5__guid
#define SOAP_TYPE_ns5__guid (220)
typedef char *ns5__guid;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetVersionInfo(struct soap*, _ns1__GetVersionInfo *ns1__GetVersionInfo, _ns1__GetVersionInfoResponse *ns1__GetVersionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetCountryRegionInfo(struct soap*, _ns1__GetCountryRegionInfo *ns1__GetCountryRegionInfo, _ns1__GetCountryRegionInfoResponse *ns1__GetCountryRegionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetEntityTypes(struct soap*, _ns1__GetEntityTypes *ns1__GetEntityTypes, _ns1__GetEntityTypesResponse *ns1__GetEntityTypesResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetDataSourceInfo(struct soap*, _ns1__GetDataSourceInfo *ns1__GetDataSourceInfo, _ns1__GetDataSourceInfoResponse *ns1__GetDataSourceInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetGreatCircleDistances(struct soap*, _ns1__GetGreatCircleDistances *ns1__GetGreatCircleDistances, _ns1__GetGreatCircleDistancesResponse *ns1__GetGreatCircleDistancesResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns1__GetClientToken(struct soap*, _ns1__GetClientToken *ns1__GetClientToken, _ns1__GetClientTokenResponse *ns1__GetClientTokenResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns10__Geocode(struct soap*, _ns9__Geocode *ns9__Geocode, _ns9__GeocodeResponse *ns9__GeocodeResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns10__ReverseGeocode(struct soap*, _ns9__ReverseGeocode *ns9__ReverseGeocode, _ns9__ReverseGeocodeResponse *ns9__ReverseGeocodeResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns13__GetImageryMetadata(struct soap*, _ns12__GetImageryMetadata *ns12__GetImageryMetadata, _ns12__GetImageryMetadataResponse *ns12__GetImageryMetadataResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns13__GetMapUri(struct soap*, _ns12__GetMapUri *ns12__GetMapUri, _ns12__GetMapUriResponse *ns12__GetMapUriResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns16__CalculateRoute(struct soap*, _ns15__CalculateRoute *ns15__CalculateRoute, _ns15__CalculateRouteResponse *ns15__CalculateRouteResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns16__CalculateRoutesFromMajorRoads(struct soap*, _ns15__CalculateRoutesFromMajorRoads *ns15__CalculateRoutesFromMajorRoads, _ns15__CalculateRoutesFromMajorRoadsResponse *ns15__CalculateRoutesFromMajorRoadsResponse);

SOAP_FMAC5 int SOAP_FMAC6 __ns6__Search(struct soap*, _ns3__Search *ns3__Search, _ns3__SearchResponse *ns3__SearchResponse);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetVersionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetVersionInfo *ns1__GetVersionInfo, _ns1__GetVersionInfoResponse *ns1__GetVersionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetCountryRegionInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCountryRegionInfo *ns1__GetCountryRegionInfo, _ns1__GetCountryRegionInfoResponse *ns1__GetCountryRegionInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetEntityTypes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetEntityTypes *ns1__GetEntityTypes, _ns1__GetEntityTypesResponse *ns1__GetEntityTypesResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetDataSourceInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDataSourceInfo *ns1__GetDataSourceInfo, _ns1__GetDataSourceInfoResponse *ns1__GetDataSourceInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetGreatCircleDistances(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetGreatCircleDistances *ns1__GetGreatCircleDistances, _ns1__GetGreatCircleDistancesResponse *ns1__GetGreatCircleDistancesResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetClientToken(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetClientToken *ns1__GetClientToken, _ns1__GetClientTokenResponse *ns1__GetClientTokenResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__Geocode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__Geocode *ns9__Geocode, _ns9__GeocodeResponse *ns9__GeocodeResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__ReverseGeocode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__ReverseGeocode *ns9__ReverseGeocode, _ns9__ReverseGeocodeResponse *ns9__ReverseGeocodeResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetImageryMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetImageryMetadata *ns12__GetImageryMetadata, _ns12__GetImageryMetadataResponse *ns12__GetImageryMetadataResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetMapUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetMapUri *ns12__GetMapUri, _ns12__GetMapUriResponse *ns12__GetMapUriResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns16__CalculateRoute(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns15__CalculateRoute *ns15__CalculateRoute, _ns15__CalculateRouteResponse *ns15__CalculateRouteResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns16__CalculateRoutesFromMajorRoads(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns15__CalculateRoutesFromMajorRoads *ns15__CalculateRoutesFromMajorRoads, _ns15__CalculateRoutesFromMajorRoadsResponse *ns15__CalculateRoutesFromMajorRoadsResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__Search(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__Search *ns3__Search, _ns3__SearchResponse *ns3__SearchResponse);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetVersionInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetCountryRegionInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetEntityTypes(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetDataSourceInfo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetGreatCircleDistances(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns1__GetClientToken(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns10__Geocode(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns10__ReverseGeocode(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns13__GetImageryMetadata(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns13__GetMapUri(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns16__CalculateRoute(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns16__CalculateRoutesFromMajorRoads(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns6__Search(struct soap*);

#endif

/* End of soapStub.h */
